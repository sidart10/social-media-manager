# AI Video Agent Configuration
# Store your API keys and preferences here
# IMPORTANT: This file should be added to .gitignore

# API Keys (REQUIRED - Loaded from project .env)
api_keys:
  heygen_api_key: "${HEYGEN_API_KEY}"
  gemini_api_key: "${GEMINI_API_KEY}"
  openai_api_key: "${OPENAI_API_KEY}"

# Provider Settings
providers:
  default_talking_head: heygen
  default_scene_generation: veo # Fast b-roll
  default_cinematic: sora2 # High-quality cinematic

  heygen:
    enabled: true
    default_avatar_id: "0f69c804db9341f2bc56d66f766ec389" # Sid Dani avatar
    default_voice_id: "70569ea23d624fc69f15288f1f7f5866" # Sid Dani cloned voice
    caption_enabled: true # Always ON by default (80% muted viewing)
    webhook_enabled: false # Enable for production

  veo:
    enabled: true
    model: "veo-3.0-generate-preview" # Options: veo-3.0-generate-preview (quality), veo-3.0-fast-generate-preview (speed)
    default_aspect_ratio: "16:9" # Options: 16:9 (1080p HD), 9:16 (720p)
    output_dir: "./outputs/veo3"
    capabilities:
      vertical_9_16: true # Supports 720p vertical
      horizontal_16_9: true # Supports 1080p HD horizontal
      image_to_video: true # Can animate images
    use_cases:
      - "Fast b-roll generation"
      - "Background scenes"
      - "Conceptual visuals"
      - "High-volume content"
      - "Image animation"

  sora2:
    enabled: true
    model: "sora-2" # Options: sora-2 (balanced), sora-2-pro (premium quality)
    default_size: "1280x720" # Options: 1280x720, 720x1280 (vertical), 1792x1024, 1024x1792 (tall vertical)
    default_seconds: "8" # Options: 4, 8, 12
    capabilities:
      vertical_sizes: ["720x1280", "1024x1792"]
      horizontal_sizes: ["1280x720", "1792x1024"]
      duration_options: [4, 8, 12]
      watermark: true # C2PA watermark present (must preserve)
      merge_videos: true # Can stitch multiple clips
      fade_animations: true # Can create fade effects
    use_cases:
      - "Premium cinematic content"
      - "Hero shots"
      - "High-end social media"
      - "Quality-focused projects"
      - "Video merging/stitching"

# Platform Defaults
platform:
  default: instagram # Default platform for quick commands

# Generation Settings
generation:
  default_captions: true
  default_hook_duration_sec: 1.5 # Recommended hook length
  auto_cost_estimate: true
  max_cost_per_video_usd: 5.0 # Safety limit
  queue_poll_interval_sec: 5
  max_queue_wait_minutes: 10

  # Smart Provider Routing
  routing:
    vertical_9_16:
      fast: "veo" # Veo 3 at 720p for speed
      cinematic: "sora2" # Sora 2 at 720x1280 or 1024x1792 for quality
      default: "veo" # Default to fast unless user requests cinematic

    horizontal_16_9:
      fast: "veo" # Veo 3 at 1080p HD for speed
      cinematic: "sora2" # Sora 2 at 1280x720 or 1792x1024 for quality
      default: "veo" # Default to fast unless user requests cinematic

    use_sora_when:
      - 'User explicitly requests "cinematic" or "high-quality"'
      - 'User requests "premium" content'
      - "User wants longer duration (8s or 12s)"
      - "User needs video merging/stitching"

    use_veo_when:
      - "User needs fast turnaround"
      - "User requests b-roll or background footage"
      - "User wants to animate an image"
      - "Cost-conscious project"
      - "High-volume content generation"

  # Enhanced Prompting System
  prompting:
    enabled: true
    templates_file: "./video-prompting-templates.yaml"
    use_virtual_film_producer: true # Apply Virtual Film Producer methodology

    structure:
      text_to_video: "[Scene Description] | [Camera Movement] | [Lighting] | [Color & Tone] | [Technical Format]"
      image_to_video: "[Primary Motion] | [Cinematic Enhancement] | [Technical Format]"

    auto_enhance: true # Automatically enhance user prompts with cinematic terminology
    include_negative_prompts: false # Veo/Sora don't explicitly support negative prompts yet

    components:
      camera_movement: true # Add cinematography terms
      lighting: true # Add lighting setup details
      color_grading: true # Add color palette specifications
      technical_specs: true # Add lens, aspect ratio, resolution

    quality_mode: "professional" # Options: basic, professional, cinematic

# Output Settings
output:
  folder: "./outputs"
  naming_pattern: "{platform}_{provider}_{timestamp}" # e.g., reels_heygen_20251025_143022
  organize_by_date: true
  include_metadata: true # Save JSON metadata with each video
  preserve_watermarks: true # Never strip C2PA/watermarks

# Consent & Safety
consent:
  require_avatar_consent: true
  consent_artifacts_folder: "./consent"
  block_unconsented_avatars: true

# Cost Tracking
cost_tracking:
  enabled: true
  log_file: "./cost-log.json"
  alert_threshold_usd: 10.0 # Alert if daily cost exceeds

# Skills Configuration (Skills-First Architecture)
skills_directory: "{project-root}/.claude/skills/ai-video-agent"
skills_execution_model: "load_and_follow"  # Skills are knowledge packages

# Available Agent-Specific Skills
skills_available:
  video_generation:
    - veotools-mastery  # Google Veo video generation (image-to-video, text-to-video, diagram animation)

# Skills with Executable Scripts
skills_with_scripts:
  # None yet - veotools-mastery is pure MCP orchestration
  # Future additions:
  #   - video_preprocessing (Python: frame extraction, resizing)
  #   - metadata_generator (Python: EXIF/metadata injection)

# Skill Loading Guidance
skill_loading_rules:
  - "Load skills when task matches skill purpose"
  - "Follow SKILL.md instructions completely"
  - "Reference files in skill's reference/ folder when needed"
  - "veotools-mastery: Load for Veo generation, diagram animation, image-to-video"
  - "Workflows may reference skills at specific steps"
  - "All 4 workflows kept (complex orchestration): talking-head, scene, cinematic-sequence, setup-avatars"

# MCP Tools Reference (Documented in Skills)
# NOTE: MCP server configuration is workspace-level, not agent-level
# See active MCP servers: `claude mcp list`
# Skills document which MCP tools they use - no duplication needed

mcp_tools_overview:
  note: "veotools-mastery skill is self-documenting. See skill's SKILL.md for complete MCP tool usage patterns."

  # Active MCP servers (per `claude mcp list` 2025-10-30)
  currently_connected:
    - heygen  # Talking head avatar videos (used directly by workflows)
    - veotools  # Veo video generation (used by: veotools-mastery skill)
    - fal-video  # Alternative video providers (future skills)

  skill_mcp_mapping:
    veotools-mastery:
      - veotools (mcp__veotools__generate_start, mcp__veotools__generate_get, mcp__veotools__list_models)
      - Models: Veo 2.0, Veo 3.0, Veo 3.1 (standard and fast variants)
      - Usage: Image-to-video animation, text-to-video generation, async job management

  direct_mcp_usage:
    # These tools used directly by workflows (not yet skills-wrapped)
    heygen:
      - mcp__heygen__generate_avatar_video
      - mcp__heygen__get_avatar_video_status
      - mcp__heygen__list_avatars
      - mcp__heygen__list_voices
      - Future: Create heygen-mastery skill for avatar video methodology

  cost_optimization:
    tier_1_free:
      # None for video generation (all providers have costs)

    tier_2_low_cost:
      - Veo 3 Fast (~$0.20-0.30 per 8s clip)
      - Veo 3 Standard (~$0.30-0.50 per 8s clip)

    tier_3_paid:
      - HeyGen talking head (~$0.10-0.50 per minute, varies by duration)
      - Sora 2 (~$0.50-1.00 per clip, cinematic quality)
      - Always show cost estimate and get user approval before generation

# Legacy MCP Server Configuration (for reference, now documented in skills)
mcp_servers:
  heygen:
    server_name: "heygen"
    tool_prefix: "mcp__heygen__"
    tools:
      - get_avatar_groups
      - get_avatars_in_avatar_group
      - get_voices
      - generate_avatar_video
      - get_avatar_video_status

  veo:
    server_name: "veo3"
    tool_prefix: "mcp__veo3__"
    tools:
      - generate_video
      - generate_video_from_image
      - list_generated_videos
      - get_video_info

  sora2:
    server_name: "sora2"
    tool_prefix: "mcp__sora2__"
    tools:
      - create_video
      - get_video_status
      - list_videos
      - delete_video
      - merge_videos
      - create_fade_animation

# Advanced Settings
advanced:
  retry_attempts: 3
  timeout_seconds: 600 # 10 minutes for video generation
  cache_avatar_list: true
  log_generations: true
