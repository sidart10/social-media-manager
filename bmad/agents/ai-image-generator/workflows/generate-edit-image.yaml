# Edit Image Workflow
# Purpose: Transform, enhance, and edit existing images using Nanobanana's pixel-perfect editing
# Status: PRODUCTION READY - Leverages Gemini's best-in-class editing capabilities

name: generate-edit-image
description: "Edit existing images with AI - blur backgrounds, remove objects, style transfer, enhance quality, blend photos"
author: "AI Image Generator Agent"
version: "1.0.0"

# Configuration
config_source: "{agent-folder}/ai-image-generator-sidecar/config.yaml"
capabilities_doc: "{agent-folder}/ai-image-generator-sidecar/MCP_CAPABILITIES.md"
output_folder: "{agent-folder}/ai-image-generator-sidecar/outputs"

# Provider: Nanobanana (Gemini) - BEST for editing
provider: "nanobanana"
tool: "mcp__nanobanana__generate_image"

# This is an action workflow
template: false

# Common Editing Presets
editing_presets:
  blur_background:
    prompt: "Blur the background significantly while keeping the subject in sharp focus, professional depth of field effect"
    best_for: "Product photos, portraits, professional headshots"

  remove_background:
    prompt: "Remove the background completely, make it transparent or solid color, keep subject with clean edges"
    best_for: "Product shots, profile pictures, design elements"

  dark_tech_style:
    prompt: "Transform to dark monochrome tech aesthetic - black background #0B0B0B, high contrast, minimal, professional design language"
    best_for: "Converting casual images to LinkedIn professional style"

  enhance_quality:
    prompt: "Enhance overall image quality - improve sharpness, correct colors, reduce noise, professional-grade enhancement"
    best_for: "Old photos, low-quality screenshots, compressed images"

  remove_object:
    prompt: "Remove {object_description} from the image, fill the area naturally to match surrounding context"
    best_for: "Removing unwanted elements, people, watermarks"

  style_transfer:
    prompt: "Transform image style to {target_style} while preserving subject and composition"
    best_for: "Photo to illustration, realistic to minimalist, etc."

  color_correction:
    prompt: "Adjust colors for professional appearance - correct white balance, enhance vibrancy, ensure color accuracy"
    best_for: "Photos with poor lighting, color casts"

  upscale_enhance:
    prompt: "Upscale resolution and enhance details, improve sharpness and clarity, professional quality upgrade"
    best_for: "Small images, pixelated screenshots"

# Instructions
instructions:
  - step: 1
    goal: "Get image(s) and understand editing goal"

    <action>Welcome: "Let's edit your image using Nanobanana's pixel-perfect AI editing."</action>

    <ask>Do you want to:
    1. Edit a single image (transform, enhance, remove elements)
    2. Blend multiple images together (photo composition)
    3. Multi-turn editing (iterative refinement)
    </ask>

    <action>Store as {{edit_mode}}</action>

    <check if="edit_mode == 1">
      <ask>Provide the path to your image file:</ask>
      <action>Store as {{input_image_path}}</action>
      <action>Validate file exists using Bash: test -f {{input_image_path}}</action>
      <check if="file doesn't exist">
        <action>Error: "Image not found at {{input_image_path}}"</action>
        <ask>Try again with correct path?</ask>
      </check>
    </check>

    <check if="edit_mode == 2">
      <ask>How many images to blend? (2-3 recommended)</ask>
      <action>Store as {{blend_count}}</action>

      <for-each>N in 1 to blend_count</for-each>
      <ask>Path to image {{N}}:</ask>
      <action>Store as {{input_image_path_N}}</action>
      <action>Validate file exists</action>
    </check>

    <check if="edit_mode == 3">
      <ask>Starting image path:</ask>
      <action>Store as {{input_image_path}}</action>
      <action>Set multi_turn_mode = true</action>
    </check>

  - step: 2
    goal: "Choose editing approach"

    <ask>How would you like to edit?
    1. Quick Preset (common edits)
    2. Describe Custom Edit (natural language)
    3. Let me suggest based on image
    </ask>

    <action>Store as {{edit_approach}}</action>

    <check if="edit_approach == 1">
      <action>Show editing presets:</action>
      <action>
      Common Editing Presets:

      1. Blur Background - Professional depth effect
      2. Remove Background - Transparent or solid color
      3. Dark Tech Style - Convert to LinkedIn aesthetic (#0B0B0B, minimal)
      4. Enhance Quality - Sharpen, color correct, denoise
      5. Remove Object - Delete unwanted elements
      6. Style Transfer - Change artistic style
      7. Color Correction - Fix lighting and colors
      8. Upscale & Enhance - Increase resolution and quality
      </action>

      <ask>Which preset? (1-8 or describe custom)</ask>
      <action>Store as {{preset_choice}}</action>

      <check if="preset_choice in 1-8">
        <action>Load preset prompt from editing_presets</action>
        <action>Store as {{edit_prompt}}</action>

        <check if="preset_choice == 5 (remove object)">
          <ask>What object should I remove? (e.g., "person on left", "watermark", "background sign")</ask>
          <action>Insert into preset prompt</action>
        </check>

        <check if="preset_choice == 6 (style transfer)">
          <ask>Target style? (e.g., "minimalist illustration", "oil painting", "wireframe diagram")</ask>
          <action>Insert into preset prompt</action>
        </check>
      </check>
    </check>

    <check if="edit_approach == 2">
      <ask>Describe the edit you want in natural language:
      Examples:
      - "Blur the background but keep the person sharp"
      - "Change the blue shirt to black"
      - "Remove the text watermark in bottom right"
      - "Make the lighting warmer and more golden"
      - "Transform to dark tech aesthetic like my LinkedIn posts"
      </ask>

      <action>Store user description as {{edit_prompt}}</action>
    </check>

    <check if="edit_approach == 3">
      <action>Analyze image type (photo, screenshot, design, diagram)</action>
      <action>Suggest relevant edits based on analysis</action>
      <ask>Try suggested edit? [y/n/describe custom]</ask>
    </check>

    <check if="edit_mode == 2 (blending)">
      <ask>Describe how to blend the images:
      Example: "Put me and my dog on a basketball court"
      Example: "Combine these product shots into one scene"
      </ask>
      <action>Store as {{blend_prompt}}</action>
    </check>

  - step: 3
    goal: "Confirm editing plan"

    <action>Display editing summary:</action>
    <action>
    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    Image Editing Plan
    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

    {{If single edit:}}
    Input: {{filename from path}}
    Edit: {{edit_prompt OR preset_name}}

    {{If blending:}}
    Inputs: {{blend_count}} images
    Blend: {{blend_prompt}}

    Provider: Gemini Nanobanana (pixel-perfect editing)
    Mode: {{edit_mode_name}}
    Est. Time: 3-5 seconds

    Output: outputs/edited-images/{{filename}}_edited.png

    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    </action>

    <ask>Proceed with edit? [y/n]</ask>

  - step: 4
    goal: "Prepare for editing"

    <action>Create output folder:</action>
    <action>Bash: mkdir -p "{{output_folder}}/edited-images"</action>

    <action>Get original image info:</action>
    <action>Bash: file {{input_image_path}}</action>
    <action>Bash: ls -lh {{input_image_path}}</action>
    <action>Store original size as {{original_size}}</action>

    <action>Verify image format is supported (PNG, JPEG, WebP)</action>
    <action>Verify file size < 20MB (Nanobanana limit)</action>

    <check if="file too large">
      <action>Warn: "Image is {{size}}MB. Nanobanana accepts up to 20MB. Compress first?"</action>
      <ask>Compress and continue? [y/n]</ask>
    </check>

  - step: 5
    goal: "Execute edit via Nanobanana MCP"

    <action>Record start_time</action>

    <action>Show: "🎨 Editing image... (est. 3-5 seconds)"</action>

    <critical>Call Nanobanana MCP tool for editing:</critical>

    <check if="single image edit">
      <action>
      result = mcp__nanobanana__generate_image({
        prompt: {{edit_prompt}},
        input_image_path_1: {{input_image_path}},
        mode: "edit",
        n: 1
      })
      </action>
    </check>

    <check if="blending multiple images">
      <action>
      result = mcp__nanobanana__generate_image({
        prompt: {{blend_prompt}},
        input_image_path_1: {{input_image_path_1}},
        input_image_path_2: {{input_image_path_2}},
        input_image_path_3: {{input_image_path_3 if exists}},
        mode: "edit",
        n: 1
      })
      </action>
    </check>

    <action>Record end_time</action>
    <action>Calculate generation_time = end_time - start_time</action>

    <action>Extract output from result:</action>
    <action>- nano_output_path = result.file_paths[0]</action>
    <action>- files_api_id = result.files_api_ids[0]</action>
    <action>- output_size = result.total_size_mb</action>

  - step: 6
    goal: "Save edited image to agent outputs"

    <action>Create filename for edited image:</action>
    <action>{{original_filename}}_edited_{{timestamp}}.png</action>
    <action>Store as {{edited_filename}}</action>

    <action>Copy from Nanobanana location to agent outputs:</action>
    <action>Bash: cp "{{nano_output_path}}" "{{output_folder}}/edited-images/{{edited_filename}}"</action>

    <action>Get final file size:</action>
    <action>Bash: ls -lh "{{output_folder}}/edited-images/{{edited_filename}}" | awk '{print $5}'</action>
    <action>Store as {{final_size}}</action>

  - step: 7
    goal: "Create metadata and before/after comparison"

    <action>Create metadata JSON using Write tool:</action>
    <action>
    File: {{output_folder}}/edited-images/{{edited_filename}}_metadata.json

    Content:
    {
      "edit_type": "{{preset_name OR 'custom'}}",
      "edit_prompt": "{{edit_prompt OR blend_prompt}}",
      "input_images": [
        {
          "path": "{{input_image_path}}",
          "size": "{{original_size}}"
        }
        {{if blending, add more images}}
      ],
      "output_image": {
        "path": "edited-images/{{edited_filename}}",
        "size": "{{final_size}}"
      },
      "provider": "nanobanana",
      "model": "gemini-2.5-flash-image",
      "tool": "mcp__nanobanana__generate_image",
      "mode": "edit",
      "timestamp": "{{ISO-8601}}",
      "generation_time_seconds": {{generation_time}},
      "files_api_id": "{{files_api_id}}",
      "nano_output_path": "{{nano_output_path}}",
      "comparison": {
        "original_size": "{{original_size}}",
        "edited_size": "{{final_size}}",
        "size_change": "{{calculate difference}}"
      },
      "multi_turn_session": {{multi_turn_mode}},
      "iteration": 1,
      "quality_notes": ""
    }
    </action>

    <action>Show completion:</action>
    <action>
    ✅ Image edited successfully!

    Original: {{original_filename}} ({{original_size}})
    Edited: {{edited_filename}} ({{final_size}})

    Edit: {{edit_prompt}}
    Time: {{generation_time}} seconds

    Location: {{output_folder}}/edited-images/
    </action>

    <template-output>edit_complete</template-output>

  - step: 8
    goal: "Review and offer refinement"

    <action>Show before/after comparison info</action>

    <ask>What would you like to do?
    1. View side-by-side comparison
    2. Refine edit (make changes to this result)
    3. Try different edit (start over with same image)
    4. Apply same edit to another image
    5. Save and done
    </ask>

    <action>Store as {{next_action}}</action>

    <check if="next_action == 1">
      <action>Show both file paths for user to open:</action>
      <action>Original: {{input_image_path}}</action>
      <action>Edited: {{output_folder}}/edited-images/{{edited_filename}}</action>
      <action>Suggest: "Open both in preview/browser for comparison"</action>
      <goto step="8">Return to options</goto>
    </check>

    <check if="next_action == 2">
      <action>Multi-turn editing mode enabled</action>
      <ask>What refinement do you want?
      Examples:
      - "Blur more strongly"
      - "Keep the edge sharper"
      - "Also remove the sign in background"
      - "Make it even darker"
      </ask>

      <action>Store as {{refinement_prompt}}</action>

      <action>Update iteration counter</action>

      <action>Call Nanobanana again (multi-turn):</action>
      <action>
      result = mcp__nanobanana__generate_image({
        prompt: {{refinement_prompt}},
        file_id: {{files_api_id}},  // Use previous result
        mode: "edit",
        n: 1
      })
      </action>

      <action>Save as {{edited_filename}}_v{{iteration}}.png</action>
      <action>Update metadata with new iteration</action>
      <action>Show: "✅ Refinement complete!"</action>

      <goto step="8">Return to options (can iterate further)</goto>
    </check>

    <check if="next_action == 3">
      <goto step="2">Start over with new edit description</goto>
    </check>

    <check if="next_action == 4">
      <ask>Path to next image to edit with same settings:</ask>
      <action>Store as {{input_image_path}}</action>
      <action>Use same {{edit_prompt}}</action>
      <goto step="5">Apply edit to new image</goto>
    </check>

    <check if="next_action == 5">
      <action>Show: "Great! Edited image saved to: {{output_folder}}/edited-images/{{edited_filename}}"</action>
      <action>Workflow complete</action>
    </check>

  - step: 9
    goal: "Create editing summary"
    optional: true

    <action>If multiple edits or iterations performed, create summary:</action>

    <action>
    Write: {{output_folder}}/edited-images/EDITING_SESSION_{{timestamp}}.md

    Content:
    # Image Editing Session Summary

    **Date:** {{timestamp}}
    **Provider:** Nanobanana (Gemini) - Pixel-Perfect Editing

    ## Images Edited

    {{For each edited image:}}
    ### {{N}}. {{original_filename}} → {{edited_filename}}

    **Edit:** {{edit_prompt}}
    **Time:** {{generation_time}}s
    **Size Change:** {{original_size}} → {{final_size}}
    {{If iterations:}}
    **Iterations:** {{iteration_count}}
    {{End if}}

    ## Session Stats

    - Total images edited: {{count}}
    - Total iterations: {{sum of all iterations}}
    - Total time: {{total_time}} seconds
    - Average time per edit: {{avg_time}}s

    ## Files

    All edited images saved to: {{output_folder}}/edited-images/
    {{List all output files}}

    ## Quality Notes

    {{Any quality observations or notes}}
    </action>

    <template-output>session_summary</template-output>

# Validation
validation:
  required_outputs:
    - "Edited image PNG file"
    - "Metadata JSON file"

  quality_checks:
    - "Edit applied correctly"
    - "Subject preserved (if applicable)"
    - "No quality degradation"
    - "Clean edges/transitions"
    - "Natural blending"

  technical_checks:
    - "File format: PNG"
    - "File saved successfully"
    - "Metadata complete"

# Editing Best Practices
editing_guidelines: |
  1. Input Quality Matters:
     - Start with highest quality original
     - Minimum 512x512px recommended
     - No heavy compression
     - Clear subject if editing specific elements

  2. Prompt Specificity:
     - Be precise about what to change
     - Specify what to preserve
     - Use natural language (Nanobanana excels at this)
     - Examples: "Blur background while keeping subject sharp"

  3. Iterative Refinement:
     - Start with broad edit
     - Refine in steps (don't try to fix everything at once)
     - Use multi-turn mode for gradual improvements
     - Each iteration builds on previous

  4. Blending Multiple Images:
     - Choose related images (similar lighting, style)
     - Describe desired composition clearly
     - Nanobanana handles blending naturally
     - Example: "Place me from image 1 in the scene from image 2"

  5. Quality Preservation:
     - Nanobanana maintains quality well
     - Use "enhance quality" if starting with low-res
     - PNG format avoids compression artifacts
     - Check edges and transitions

  6. Common Use Cases:
     - Product photos: Remove background, enhance quality
     - Portraits: Blur background, color correction
     - Screenshots: Enhance quality, crop/resize
     - Designs: Style transfer to brand aesthetic
     - Social posts: Transform to platform style (dark tech for LinkedIn)

# Notes
execution_notes: |
  This workflow leverages Nanobanana's BEST features:
  - Pixel-perfect editing (edits specific elements without affecting rest)
  - Multi-turn refinement (conversational editing)
  - Photo blending (combine multiple images)
  - Natural language instructions (just describe what you want)

  Use Cases:
  - Transform casual photos → professional LinkedIn aesthetic
  - Remove backgrounds from product shots
  - Blur backgrounds for professional portraits
  - Enhance low-quality screenshots
  - Combine multiple images into compositions
  - Style transfer (photo → diagram, realistic → minimal)
  - Remove unwanted objects/watermarks
  - Color correction and enhancement

  Nanobanana is BETTER at editing than OpenAI:
  - True pixel-perfect (doesn't recreate entire image)
  - Multi-turn iterations (keeps refining)
  - Photo blending (unique feature)
  - Faster and cheaper

  Perfect for:
  - Cleaning up existing content
  - Transforming content to brand style
  - Quick fixes and enhancements
  - Creating compositions from multiple sources

  Expected workflow:
  - User: "Make this photo have dark background like LinkedIn posts"
  - 2 questions, 5 seconds later: Done!
  - Can iterate: "Make it even darker" → 3 sec → Done!
