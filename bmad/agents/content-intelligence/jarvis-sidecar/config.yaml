# Jarvis - Content Intelligence Agent Configuration
module: content-intelligence
agent_name: Jarvis
output_folder: "{agent-folder}/outputs"
sessions_folder: "{agent-folder}/sessions"
knowledge_folder: "{agent-folder}/knowledge"

# MCP Server Configuration (Cost-Optimized Tiered Approach)
mcp_servers:
  # ============================================
  # TIER 1: FREE - Always Try These First
  # ============================================

  youtube_mcp_server:
    enabled: true
    cost: "FREE (10k units/day)"
    priority: 1
    tools:
      - get_channel_details
      - get_channel_videos
      - analyze_video_engagement
      - get_trending_videos
      - evaluate_video_for_knowledge_base
      - get_video_transcript

  youtube_transcript:
    enabled: true
    cost: "FREE"
    priority: 1
    tools:
      - get_transcript

  # ============================================
  # TIER 2: Low-Cost - Use After Free Tier
  # ============================================

  linkedin_mcp:
    enabled: true
    cost: "RapidAPI (varies)"
    priority: 2
    tools:
      - fetch_and_save_linkedin_posts
      - get_top_posts
      - search_posts
      - get_posts_by_date
      - get_saved_posts

  exa_mcp:
    enabled: true
    cost: "Paid API"
    priority: 2
    tools:
      - web_search_exa
      - deep_researcher_start
      - deep_researcher_check
      - company_research
      - linkedin_search

  social_media_mcp:
    enabled: true
    cost: "Uses Brave Search + Perplexity AI (API keys required)"
    priority: 2
    tools:
      - get_trending_topics # Platform trending topics
      - research_topic # Comprehensive research with parameters:
        #   includeHashtags (extracts hashtags)
        #   includeFacts (extracts key data points)
        #   includeTrends (trending data)
        #   includeNews (recent news articles)
    capabilities:
      - "Brave Search integration (web, news, discussions)"
      - "Perplexity AI deep research"
      - "Hashtag extraction"
      - "Fact and statistic extraction"
      - "News article gathering"
      - "Keyword frequency analysis"

  # ============================================
  # TIER 3: APIFY - Only When No Free Option
  # Master Gateway to 5000+ Scrapers
  # ============================================

  apify_mcp:
    enabled: true
    url: "https://mcp.apify.com"
    api_key: "{{APIFY_API_KEY}}"
    cost: "Pay per use (~$0.40-0.50 per 1k results)"
    priority: 3

    # Primary scrapers for each platform
    recommended_actors:
      twitter:
        actor: "xtdata/twitter-x-scraper"
        use_when: "Analyzing competitor Twitter profiles (not your own)"
        cost_per_1k_tweets: "$0.40"
        data_extracted: "tweets, engagement, profile stats, timeline"

      instagram:
        actor: "apify/instagram-scraper"
        use_when: "ANY Instagram analysis (no free alternative)"
        cost_per_1k_posts: "$0.50"
        data_extracted: "posts, likes, comments, followers, profile data"

      tiktok:
        actor: "clockworks/tiktok-scraper"
        use_when: "ANY TikTok analysis (no free alternative)"
        cost_estimate: "~$0.50 per profile"
        data_extracted: "videos, views, likes, comments, profile metrics"

      linkedin:
        actor: "apify/linkedin-profile-scraper"
        use_when: "Fallback if linkedin-mcp fails"
        cost_estimate: "~$0.30 per profile"

      youtube:
        actor: "apify/youtube-scraper"
        use_when: "Fallback if youtube-mcp-server quota exceeded"
        cost_estimate: "~$0.40 per channel"

      facebook:
        actor: "apify/facebook-posts-scraper"
        use_when: "If user requests Facebook analysis"
        cost_estimate: "~$0.50 per profile"

    # Discovery capability
    discovery:
      enabled: true
      total_actors: "5000+"
      description: "Can recommend scrapers when user needs new platforms or data sources"
      browse_url: "https://apify.com/store"

# Custom Modules (Direct API - Usually Cheaper)
custom_modules:
  twitter_api_client:
    path: "{project-root}/bmad/modules/twitter-api-client"
    use_for: "YOUR Twitter account (free with API quota)"

  linkedin_api_client:
    path: "{project-root}/bmad/modules/linkedin-api-client"
    use_for: "YOUR LinkedIn posting (OAuth)"

# Platform Specifications (Writing Guidelines)
platforms:
  youtube:
    script_lengths: [30, 60, 90, 180, 300, 600]
    max_title: 100
    max_description: 5000
    optimal_hook_duration: 5
    structure: "Hook → Intro → Points → Summary → CTA"

  reels:
    duration: [30, 60, 90]
    aspect_ratio: "9:16"
    hook_duration: 3
    structure: "Hook (3s) → Fast Beats → CTA"

  tiktok:
    duration: [15, 30, 60, 180]
    aspect_ratio: "9:16"
    hook_duration: 3
    trends_matter: true

  linkedin:
    max_text: 3000
    optimal_text: 1600
    hook_max: 140
    structure: "Hook line → Context → Points → CTA"
    tone: "Professional but conversational"

  twitter:
    max_text_free: 280
    max_text_premium: 25000
    max_media: 4
    thread_recommended: true
    current_trend: "Long-form posts gaining traction vs threads"

  instagram:
    max_caption: 2200
    optimal_caption: 125
    hashtag_max: 30
    hashtag_optimal: "5-10"
    structure: "Hook → Story → Value → CTA"

# Voice Learning Configuration
voice_learning:
  min_posts_to_analyze: 20
  platforms_to_check:
    - twitter
    - linkedin
    - youtube

  analysis_features:
    - vocabulary_level
    - sentence_structure
    - tone_markers
    - signature_phrases
    - emoji_usage
    - hook_preferences
    - humor_style

  voice_profile_location: "{agent-folder}/memories.md"

# Cost Tracking
cost_tracking:
  enabled: true
  monthly_budget_alert: 10.00
  log_location: "{agent-folder}/memories.md"
  track_per_workflow: true
