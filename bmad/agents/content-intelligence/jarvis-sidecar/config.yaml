# Jarvis - Content Intelligence Agent Configuration
module: content-intelligence
agent_name: Jarvis
output_folder: "{agent-folder}/outputs"
sessions_folder: "{agent-folder}/sessions"
knowledge_folder: "{agent-folder}/knowledge"

# Skills Configuration (Skills-First Architecture)
skills_directory: "{project-root}/.claude/skills/jarvis"
skills_execution_model: "load_and_follow"  # Skills are knowledge packages, not invoked tools

# Available Agent-Specific Skills
skills_available:
  content_generation:
    - post-writer        # LinkedIn, Twitter, Substack post generation
    - video-script-writer  # YouTube and short-form video scripts
    - platform-formatter   # Platform-specific formatting (includes Python scripts)

  research_intelligence:
    - deep-web-research     # Multi-tool research orchestrator
    - research-synthesizer  # Synthesize multi-source findings
    - social-media-research # Platform-specific research
    - youtube-research      # YouTube-specific analysis

  analysis:
    - profile-analysis  # Social profile analysis across platforms
    - evidence-tracker  # Source tracking and citations
    - voice-matcher     # Apply user's authentic voice profile

  strategy:
    - youtube-growth-mastery      # YouTube growth strategies
    - youtube-thumbnail-mastery   # Thumbnail design strategies

# Skills with Executable Scripts (Deterministic Operations)
skills_with_scripts:
  - platform-formatter  # Python scripts for validation and formatting
  # Future: profile-analysis, research-synthesizer, evidence-tracker

# Skill Loading Guidance
skill_loading_rules:
  - "Load skills when task matches skill purpose (see skills_available)"
  - "Follow SKILL.md instructions completely"
  - "Reference files in skill's reference/ folder when needed"
  - "Execute scripts in skill's scripts/ folder for deterministic operations"
  - "Skills replace simple workflows (write-posts, write-scripts deleted)"
  - "Workflows kept for multi-step orchestration (learn-voice, generate-ideas, etc.)"

# MCP Tools Reference (Documented in Skills)
# NOTE: MCP server configuration is workspace-level, not agent-level
# See active MCP servers: `claude mcp list`
# Skills document which MCP tools they use - no duplication needed here

mcp_tools_overview:
  note: "Skills are self-documenting. Each skill's SKILL.md lists MCP tools it uses."

  # Active MCP servers (per `claude mcp list` 2025-10-29)
  currently_connected:
    - exa              # Web search, deep research (used by: deep-web-research skill)
    - firecrawl        # Web scraping (used by: deep-web-research skill)
    - apify            # Platform scraping (used by: profile-analysis, deep-web-research)
    - social-media-mcp # Trends, research (used by: social-media-research skill)
    - archon           # Project management, RAG (used by: deep-web-research skill)
    - mcp_twitter      # Twitter posting (used by: custom modules)
    - youtube-uploader-mcp  # YouTube uploads (available for future use)
    - heygen           # Video avatars (available for future use)
    - veotools         # Video generation (available for future use)
    - fal-video        # Video generation (available for future use)
    - gpt-image-1      # Image generation (available for future use)
    - nanobanana       # Image generation (available for future use)

  skill_mcp_mapping:
    deep-web-research:
      - exa (mcp__exa__search, deep_researcher_start/check)
      - apify (website-content-crawler, rag-web-browser)
      - archon (rag_search_knowledge_base, rag_search_code_examples)
      - firecrawl (firecrawl_search, firecrawl_scrape)

    profile-analysis:
      - apify (instagram-scraper, tiktok-scraper, twitter-scraper-lite)
      - exa (for username verification)

    social-media-research:
      - social-media-mcp (get_trending_topics, research_topic)

    platform-formatter:
      - None (uses local Python scripts for deterministic formatting)

  cost_optimization:
    tier_1_free:
      - WebSearch, WebFetch (built-in, always free)
      - firecrawl (with caching, very fast)

    tier_2_low_cost:
      - exa (~$0.05-0.15 per comprehensive search)
      - social-media-mcp (Brave Search + Perplexity, low cost)

    tier_3_paid:
      - apify (~$0.40-0.50 per 1k results)
      - Always warn user before using

# Custom Modules (Direct API Integration)
custom_modules:
  twitter_api_client:
    path: "{project-root}/bmad/modules/twitter-api-client"
    use_for: "YOUR Twitter account posting (uses mcp_twitter MCP server)"
    cost: "Free within API quota"

  linkedin_api_client:
    path: "{project-root}/bmad/modules/linkedin-api-client"
    use_for: "YOUR LinkedIn posting (OAuth)"
    cost: "Free"
    status: "Available for future integration"

# Platform Specifications (Writing Guidelines)
platforms:
  youtube:
    script_lengths: [30, 60, 90, 180, 300, 600]
    max_title: 100
    max_description: 5000
    optimal_hook_duration: 5
    structure: "Hook → Intro → Points → Summary → CTA"

  reels:
    duration: [30, 60, 90]
    aspect_ratio: "9:16"
    hook_duration: 3
    structure: "Hook (3s) → Fast Beats → CTA"

  tiktok:
    duration: [15, 30, 60, 180]
    aspect_ratio: "9:16"
    hook_duration: 3
    trends_matter: true

  linkedin:
    max_text: 3000
    optimal_text: 1600
    hook_max: 140
    structure: "Hook line → Context → Points → CTA"
    tone: "Professional but conversational"

  twitter:
    max_text_free: 280
    max_text_premium: 25000
    max_media: 4
    thread_recommended: true
    current_trend: "Long-form posts gaining traction vs threads"

  instagram:
    max_caption: 2200
    optimal_caption: 125
    hashtag_max: 30
    hashtag_optimal: "5-10"
    structure: "Hook → Story → Value → CTA"

# Voice Learning Configuration
voice_learning:
  min_posts_to_analyze: 20
  platforms_to_check:
    - twitter
    - linkedin
    - youtube

  analysis_features:
    - vocabulary_level
    - sentence_structure
    - tone_markers
    - signature_phrases
    - emoji_usage
    - hook_preferences
    - humor_style

  voice_profile_location: "{agent-folder}/memories.md"

# Cost Tracking
cost_tracking:
  enabled: true
  monthly_budget_alert: 10.00
  log_location: "{agent-folder}/memories.md"
  track_per_workflow: true
