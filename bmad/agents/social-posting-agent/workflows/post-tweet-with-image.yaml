name: post-tweet-with-image
description: Post tweet with 1-4 images to Twitter

instructions: |
  # Post Tweet with Image Workflow

  This workflow posts a tweet with images (1-4) to Twitter using the Twitter API Premium Client.

  ## Steps

  ### 1. Gather Tweet Text

  Ask the user for the tweet text:
  - "What would you like to say with your images?"
  - "Text is optional but recommended for context"

  **Store as**: `tweet_text`

  ### 2. Gather Image Paths

  Ask for image file paths:
  - "Provide the path(s) to your image(s)"
  - "You can upload 1-4 images"
  - "Supported formats: JPG, PNG, GIF, WEBP"
  - "Max size: 5MB per image (15MB for GIFs)"

  **Important**: Must be ABSOLUTE paths, not relative!

  Example paths:
  - `/Users/username/Desktop/image.jpg`
  - `/Users/sid/Desktop/4. Coding Projects/social-media-manager/sid-car.jpeg`

  **Store as**: `image_paths` (array)

  ### 3. Optional: Ask for Alt Text

  For accessibility:
  - "Would you like to add alt text for your images? [yes/no]"

  If yes, for each image:
  - "Describe image 1 (for screen readers):"

  **Store as**: `alt_texts` (array, same length as image_paths)

  ### 4. Validate Images

  ```javascript
  import { existsSync } from 'fs';
  import { stat } from 'fs/promises';

  const errors = [];

  // Check count
  if (image_paths.length < 1 || image_paths.length > 4) {
    errors.push(`Invalid image count: ${image_paths.length} (must be 1-4)`);
  }

  // Check each image
  for (let i = 0; i < image_paths.length; i++) {
    const path = image_paths[i];

    // Check exists
    if (!existsSync(path)) {
      errors.push(`Image ${i + 1} not found: ${path}`);
      continue;
    }

    // Check size
    const stats = await stat(path);
    const sizeMB = stats.size / (1024 * 1024);
    const ext = path.toLowerCase().split('.').pop();

    const maxSize = ext === 'gif' ? 15 : 5;
    if (sizeMB > maxSize) {
      errors.push(`Image ${i + 1} too large: ${sizeMB.toFixed(2)}MB (max ${maxSize}MB)`);
    }

    // Check format
    const validFormats = ['jpg', 'jpeg', 'png', 'gif', 'webp'];
    if (!validFormats.includes(ext)) {
      errors.push(`Image ${i + 1} invalid format: .${ext} (use JPG, PNG, GIF, or WEBP)`);
    }
  }

  if (errors.length > 0) {
    console.log('✗ Validation errors:');
    errors.forEach(error => console.log(`  - ${error}`));
    // Stop and ask user to fix issues
    return;
  }
  ```

  ### 5. Show Preview

  ```
  Preview:
  ─────────────────────────────────────────
  Text: [tweet_text]
  Images: X images
    1. /path/to/image1.jpg (1.2 MB)
    2. /path/to/image2.png (0.8 MB)
  Alt Text: [Yes/No]
  ─────────────────────────────────────────
  ```

  Ask for confirmation: "Post this tweet with images? [yes/no]"

  ### 6. Post Tweet with Images

  ```javascript
  import { TwitterClient } from './bmad/modules/twitter-api-client/index.js';

  const client = new TwitterClient();

  // Build media array
  const media = image_paths.map((path, index) => ({
    path: path,
    altText: alt_texts ? alt_texts[index] : undefined
  }));

  console.log(`Uploading ${media.length} image(s)...`);

  const result = await client.createTweet({
    text: tweet_text,
    media: media
  });

  if (result.success) {
    console.log('✓ Tweet with images posted successfully!');
    console.log();
    console.log('Details:');
    console.log(`  Tweet ID: ${result.id}`);
    console.log(`  URL: ${result.url}`);
    console.log(`  Images: ${media.length} uploaded`);
    console.log(`  Length: ${result.text.length} characters`);
    console.log();
    console.log(`View your tweet: ${result.url}`);

    // Update rate limits
    const stats = client.getRateLimitStats();
    console.log();
    console.log('Updated Rate Limits:');
    console.log(`  Monthly: ${stats.remaining.monthly} remaining`);
    console.log(`  Daily: ${stats.remaining.daily} remaining`);
    console.log(`  Hourly: ${stats.remaining.hourly} remaining`);
  } else {
    console.log('✗ Failed to post tweet with images');
    console.log(`  Error: ${result.error}`);

    // Provide helpful guidance
    if (result.error.includes('Media upload failed')) {
      console.log();
      console.log('Solution: Check image files and try again');
      console.log('  - Verify file paths are absolute (not relative)');
      console.log('  - Check file sizes (max 5MB per image)');
      console.log('  - Ensure files are readable');
    } else if (result.error.includes('Validation failed')) {
      console.log();
      console.log('Solution: Fix validation errors and try again');
      console.log('  - Max 4 images per tweet');
      console.log('  - Supported formats: JPG, PNG, GIF, WEBP');
      console.log('  - Max size: 5MB (15MB for GIFs)');
    }
  }
  ```

  ## Example Usage

  ```
  User: "I want to post a tweet with an image"

  Agent: "What would you like to say with your image?"

  User: "Check out our new product!"

  Agent: "Provide the path to your image(s) (1-4 images)"

  User: "/Users/sid/Desktop/product-photo.jpg"

  Agent: "Would you like to add alt text for accessibility? [yes/no]"

  User: "yes"

  Agent: "Describe the image (for screen readers):"

  User: "Product photo showing new smartphone"

  Agent:
  Preview:
  ─────────────────────────────────────────
  Text: Check out our new product!
  Images: 1 image
    1. /Users/sid/Desktop/product-photo.jpg (2.1 MB)
  Alt Text: Yes
  ─────────────────────────────────────────

  Post this tweet with images? [yes/no]

  User: "yes"

  Agent: "Uploading 1 image(s)..."

  ✓ Tweet with images posted successfully!

  Details:
    Tweet ID: 1234567890
    URL: https://twitter.com/user/status/1234567890
    Images: 1 uploaded
    Length: 29 characters

  View your tweet: https://twitter.com/user/status/1234567890
  ```

  ## Tips for Users

  1. **Image Paths**: Always use absolute paths
     - ✓ `/Users/sid/Desktop/image.jpg`
     - ✗ `./image.jpg` or `image.jpg`

  2. **Multiple Images**: Provide as comma-separated list
     - "image1.jpg, image2.jpg, image3.jpg"

  3. **Alt Text**: Highly recommended for accessibility
     - Describe what's in the image
     - Keep it concise (max ~1000 chars)

  4. **Image Optimization**:
     - Twitter compresses images automatically
     - Use JPG for photos
     - Use PNG for graphics/screenshots
     - GIFs supported up to 15MB

  ## Common Issues

  ### "File not found"
  - Path must be absolute, not relative
  - Check for typos in path
  - Ensure file exists at that location

  ### "Media upload failed"
  - File may be too large (> 5MB)
  - File may be corrupted
  - Format may not be supported

  ### "Validation failed: Cannot access file"
  - Check file permissions
  - Ensure file is readable
  - File may be in use by another program

  ## Processing Time

  - Single image: ~2-3 seconds
  - Multiple images: ~3-5 seconds
  - Images uploaded in parallel for speed
  - Twitter processes images after upload

  ## Notes

  - Images are uploaded via Twitter v1.1 API
  - Tweet is created via Twitter v2 API
  - Both operations handled automatically
  - Alt text is optional but recommended
  - Rate limits apply to all tweet types
