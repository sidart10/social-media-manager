---
description: BMAD STANDALONE: YOUTUBE_SHORTS_GUIDE
globs: 
alwaysApply: false
---

# YouTube Shorts Upload Guide

**Good News:** ‚úÖ YouTube Shorts use the SAME API as regular videos!
**MCP Support:** ‚úÖ youtube-uploader-mcp works for Shorts!

---

## üéØ How YouTube Shorts Work

### Automatic Classification

**YouTube automatically classifies videos as Shorts based on:**

1. **Aspect Ratio:** 9:16 (vertical) or 1:1 (square)
2. **Duration:** ‚â§ 3 minutes (changed Oct 15, 2024 from 60 seconds!)
3. **Orientation:** Taller than wide (vertical)

**No special API parameters needed!** Just upload a vertical video ‚â§3 minutes.

---

## üìä YouTube Shorts Requirements (2025)

### Mandatory Requirements

| Requirement      | Value       | Notes                                  |
| ---------------- | ----------- | -------------------------------------- |
| **Aspect Ratio** | 9:16        | Vertical (mobile-first)                |
| **Resolution**   | 1080x1920   | Minimum (4K supported)                 |
| **Duration**     | ‚â§ 3 minutes | NEW limit (was 60 sec before Oct 2024) |
| **Orientation**  | Vertical    | Must be taller than wide               |

### Recommended Specs

| Spec           | Recommended  | Why                  |
| -------------- | ------------ | -------------------- |
| **Resolution** | 1080x1920    | Standard HD vertical |
| **Frame Rate** | 30 or 60 fps | Smooth playback      |
| **Format**     | MP4          | Best compatibility   |
| **Codec**      | H.264        | Standard             |
| **Audio**      | AAC          | Standard             |

### Optional (But Recommended)

- **Title:** Include "#shorts" or "#Shorts"
- **Description:** Mention it's a Short
- **Tags:** Include "shorts" tag

**Note:** #shorts hashtag is NOT required for classification, but helps with promotion!

---

## üé¨ How to Upload Shorts via youtube-uploader-mcp

### Same Process as Regular Videos!

```javascript
// After OAuth complete:
mcp__youtube -
  uploader -
  mcp__upload_video({
    file_path: '/path/to/vertical-video.mp4',
    title: 'My YouTube Short #shorts',
    description: 'Amazing short video content!',
    category_id: '22', // People & Blogs
    tags: 'shorts,vertical,mobile',
    privacy: 'public',
    made_for_kids: false,
  });
```

**YouTube automatically detects:**

- ‚úÖ Video is 9:16 aspect ratio ‚Üí Short!
- ‚úÖ Duration is under 3 minutes ‚Üí Short!
- ‚úÖ Video is vertical ‚Üí Short!

**Result:** Video appears in YouTube Shorts feed!

---

## üìê Aspect Ratio Detection

### What YouTube Checks

```python
if video_height > video_width:  # Vertical
    if video_duration <= 180:  # ‚â§3 minutes
        classification = "SHORT"
    else:
        classification = "REGULAR_VIDEO"
```

**Examples:**

| Resolution | Aspect Ratio | Duration | Result            |
| ---------- | ------------ | -------- | ----------------- |
| 1080x1920  | 9:16         | 45 sec   | ‚úÖ Short          |
| 1080x1920  | 9:16         | 2.5 min  | ‚úÖ Short          |
| 1080x1920  | 9:16         | 4 min    | ‚ùå Regular video  |
| 1920x1080  | 16:9         | 45 sec   | ‚ùå Regular video  |
| 1080x1080  | 1:1          | 45 sec   | ‚úÖ Short (square) |

---

## ‚úÖ What Makes a Video a "Short"

### YouTube's Automatic Detection (No API flag needed!)

**Check 1: Aspect Ratio**

- 9:16 (vertical) ‚úÖ
- 1:1 (square) ‚úÖ
- 16:9 (horizontal) ‚ùå

**Check 2: Duration**

- ‚â§60 seconds: Definitely a Short ‚úÖ
- 61-180 seconds: Still a Short! ‚úÖ
- > 180 seconds (3 min): Regular video ‚ùå

**Check 3: Upload Date**

- Before Oct 15, 2024: Must be ‚â§60 sec
- After Oct 15, 2024: Can be up to 3 min ‚úÖ

---

## üé• Preparing Videos for Shorts

### From Regular Videos

**If you have a 16:9 video:**

1. Crop to 9:16 (vertical)
2. Export at 1080x1920
3. Keep duration ‚â§3 minutes
4. Upload via youtube-uploader-mcp

**If you have square videos:**

1. Already 1:1 aspect ratio
2. Keep ‚â§3 minutes
3. Upload directly
4. YouTube accepts as Short!

### Video Editing for Shorts

**Recommended tools:**

- FFmpeg (command-line)
- Adobe Premiere Pro
- Final Cut Pro
- CapCut
- DaVinci Resolve

**FFmpeg example (crop 16:9 to 9:16):**

```bash
ffmpeg -i input.mp4 -vf "crop=ih*9/16:ih" -c:a copy output.mp4
```

---

## üì± MCP Upload Process for Shorts

### Step 1: Prepare Video File

**Requirements:**

- Format: MP4
- Aspect ratio: 9:16
- Resolution: 1080x1920 (or higher)
- Duration: ‚â§180 seconds (3 minutes)
- Vertical orientation

### Step 2: Complete OAuth (One Time)

1. Get auth URL from `authenticate` tool
2. Authorize in browser
3. Copy code from redirect URL
4. Exchange for access token
5. Tokens saved automatically

### Step 3: Upload Short

```javascript
// Use the same upload_video tool!
const result =
  (await mcp__youtube) -
  uploader -
  mcp__upload_video({
    file_path: '/path/to/short-video.mp4',
    title: 'My First YouTube Short #shorts',
    description: 'Vertical video content optimized for mobile! #shorts #vertical',
    category_id: '22',
    tags: 'shorts,vertical,mobile,short-form',
    privacy: 'public',
    made_for_kids: false,
    channel_id: 'YOUR_CHANNEL_ID', // From channels tool
  });
```

**YouTube automatically:**

- ‚úÖ Detects 9:16 aspect ratio
- ‚úÖ Sees duration ‚â§3 minutes
- ‚úÖ Classifies as Short
- ‚úÖ Shows in Shorts feed
- ‚úÖ Shows in Shorts tab on your channel

---

## üéØ No Special Parameters Needed!

### Common Misconception

**You might think:** "I need a special Shorts API or flag"
**Reality:** YouTube Shorts use the same `videos.insert` API

**YouTube decides based on:**

1. Video dimensions (automatic)
2. Duration (automatic)
3. Upload date (automatic)

**You just upload a vertical video!**

---

## üîç Differences: Shorts vs Regular Videos

| Feature                | Shorts                 | Regular Videos        |
| ---------------------- | ---------------------- | --------------------- |
| **API Endpoint**       | videos.insert          | videos.insert (SAME!) |
| **Special Parameters** | None                   | None                  |
| **Aspect Ratio**       | 9:16 or 1:1            | Any (usually 16:9)    |
| **Duration**           | ‚â§3 minutes             | Unlimited             |
| **Detection**          | Automatic              | Automatic             |
| **Feed**               | Shorts shelf + regular | Regular only          |
| **Monetization**       | Shorts Fund            | Standard ads          |

**They're the same upload process!**

---

## ‚úÖ Upload Checklist for Shorts

Before uploading, verify:

- [ ] Video is vertical (9:16) or square (1:1)
- [ ] Resolution is 1080x1920 or higher
- [ ] Duration is ‚â§180 seconds (3 minutes)
- [ ] Format is MP4 (recommended)
- [ ] Video is taller than wide
- [ ] Title includes #shorts (optional but helpful)
- [ ] Description mentions "Short" (optional)
- [ ] Tags include "shorts" (optional)

**Required:** Just the first 3!
**Optional:** Last 3 help with promotion

---

## üé¨ Complete YouTube Upload Flow

### For Regular Videos

```javascript
(await mcp__youtube) -
  uploader -
  mcp__upload_video({
    file_path: '/path/to/video.mp4',
    title: 'My Regular Video',
    description: 'Full-length content',
    category_id: '22',
    tags: 'tutorial,howto',
    privacy: 'public',
    made_for_kids: false,
  });
```

**Specs:**

- Any aspect ratio (usually 16:9)
- Any duration
- Horizontal or vertical

---

### For Shorts (Same API!)

```javascript
(await mcp__youtube) -
  uploader -
  mcp__upload_video({
    file_path: '/path/to/short.mp4', // Must be 9:16 and ‚â§3min
    title: 'My YouTube Short #shorts',
    description: 'Quick vertical content #shorts',
    category_id: '22',
    tags: 'shorts,vertical,quick',
    privacy: 'public',
    made_for_kids: false,
  });
```

**Specs:**

- **Must be 9:16 or 1:1**
- **Must be ‚â§180 seconds**
- Vertical orientation

**YouTube handles classification automatically!**

---

## üìä YouTube Categories

Common category IDs:

- **1:** Film & Animation
- **2:** Autos & Vehicles
- **10:** Music
- **15:** Pets & Animals
- **17:** Sports
- **19:** Travel & Events
- **20:** Gaming
- **22:** People & Blogs (most common)
- **23:** Comedy
- **24:** Entertainment
- **25:** News & Politics
- **26:** Howto & Style
- **27:** Education
- **28:** Science & Technology

---

## üöÄ Practical Examples

### Example 1: Standard Short (45 seconds)

```javascript
// Video: 1080x1920, 45 seconds, MP4
await youtube.uploadVideo({
  file_path: '/Users/sid/Desktop/my-short-45sec.mp4',
  title: 'Quick Tutorial: Social Media Automation #shorts',
  description: 'Learn automation in 45 seconds! #shorts #automation #tutorial',
  category_id: '27', // Education
  tags: 'shorts,tutorial,automation,quick,tips',
  privacy: 'public',
});
```

**Result:** Appears in Shorts feed ‚úÖ

---

### Example 2: Longer Short (2.5 minutes)

```javascript
// Video: 1080x1920, 150 seconds, MP4
await youtube.uploadVideo({
  file_path: '/Users/sid/Desktop/extended-short-150sec.mp4',
  title: 'Complete Guide to LinkedIn API #shorts',
  description: 'Deep dive into LinkedIn automation in under 3 minutes! #shorts',
  category_id: '28', // Science & Tech
  tags: 'shorts,linkedin,api,programming',
  privacy: 'public',
});
```

**Result:** Still appears in Shorts feed ‚úÖ (new 3-minute limit!)

---

### Example 3: Regular Video (4 minutes)

```javascript
// Video: 1920x1080, 240 seconds, MP4
await youtube.uploadVideo({
  file_path: '/Users/sid/Desktop/regular-video-4min.mp4',
  title: 'Complete Tutorial: Building Social Media Agents',
  description: 'Full tutorial on automation',
  category_id: '28',
  tags: 'tutorial,automation,fullvideo',
  privacy: 'public',
});
```

**Result:** Regular video (horizontal, >3 min) ‚ùå Not a Short

---

## üí° Pro Tips for Shorts

### 1. Add #shorts to Title

```
"Quick Tip: API Automation #shorts"
```

**Why:** Better promotion in Shorts feed

### 2. Mention "Short" in Description

```
"This Short shows you how to..."
```

**Why:** Helps YouTube algorithm

### 3. Keep First 3 Seconds Engaging

**Why:** Shorts viewers decide fast!

### 4. Use Vertical Framing

**Why:** Fills mobile screen, better engagement

### 5. Add Captions

**Why:** Many watch without sound

---

## üéØ Summary for Your Social Media Agent

### YouTube Upload Capabilities

**Regular Videos:**

- Any aspect ratio
- Any duration
- Horizontal/vertical/square
- Full features

**Shorts:**

- **Same API endpoint** (videos.insert)
- **Same upload process**
- **Same youtube-uploader-mcp tool**
- **Auto-detected** by YouTube

### How to Upload Both

```javascript
// The agent just needs to know:
if (video.aspectRatio === '9:16' && video.duration <= 180) {
  // This will be a Short (automatic)
  console.log('This will be classified as a YouTube Short!');
} else {
  // This will be a regular video
  console.log('This will be a regular YouTube video');
}

// Upload the same way regardless!
await youtube.uploadVideo(videoFile);
```

---

## ‚úÖ Confirmed for Your Agent

**youtube-uploader-mcp CAN upload Shorts!**

Just ensure:

1. ‚úÖ Video is vertical (9:16)
2. ‚úÖ Duration ‚â§3 minutes
3. ‚úÖ Use same `upload_video` tool
4. ‚úÖ Add #shorts to title (recommended)

**That's it!** No special handling needed!

---

## üìã Quick Reference

**Shorts Detection:**

```
Vertical (9:16 or 1:1) + Duration ‚â§180sec = SHORT ‚úÖ
Horizontal (16:9) OR Duration >180sec = REGULAR ‚ùå
```

**Upload Command (Same for Both):**

```javascript
mcp__youtube -
  uploader -
  mcp__upload_video({
    file_path,
    title,
    description,
    category_id,
    tags,
    privacy,
  });
```

**YouTube's Job:**

- Detect aspect ratio
- Check duration
- Classify automatically
- Place in appropriate feed

**Your Job:**

- Create vertical video ‚â§3 min
- Upload via MCP
- Add #shorts tag
- Done!

---

## üé¨ Ready to Test!

**Once you complete OAuth:**

1. Upload a **regular video** (test basic upload)
2. Upload a **Short** (test vertical video ‚â§3 min)
3. Verify both appear correctly on your channel

---

**The MCP server works for BOTH regular videos AND Shorts!** ‚úÖ
