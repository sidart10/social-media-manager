---
description: BMAD STANDALONE: LINKEDIN_API_COMPLETE_RESEARCH
globs: 
alwaysApply: false
---

# LinkedIn API - Complete Research & Capabilities

**Date:** 2025-10-25
**Status:** ‚úÖ Research Complete - Ready to Build
**Your Account:** Personal LinkedIn with "Share on LinkedIn" + "Sign In with LinkedIn" products

---

## üéØ Executive Summary

### ‚úÖ What You CAN Do with LinkedIn API (Personal Account)

1. **Text Posts** - Up to 3,000 characters ‚úÖ
2. **Single Image Posts** - One image with text ‚úÖ
3. **Multi-Image Posts** - 2-20 images (grid layout) ‚úÖ
4. **Video Posts** - Upload and post videos ‚úÖ
5. **Document Posts (PDF Carousels)** - Upload PDF/PPT/DOC (carousel-style!) ‚úÖ
6. **Articles** - Long-form content ‚úÖ
7. **Polls** - Interactive polls ‚úÖ

### ‚ùå What You CANNOT Do

1. **Carousel Ads** - Sponsored/paid only (use Multi-Image or PDF instead)

---

## üìä Content Type Breakdown

### 1. Text Posts

**Limit:** 3,000 characters
**Truncation:** ~210-220 chars before "see more" on desktop, ~140 chars on mobile
**Best Practice:** Put key message in first 140 characters

**API Format:**

```json
{
  "author": "urn:li:person:YOUR_ID",
  "commentary": "Your text here (supports #hashtags and @mentions)",
  "visibility": "PUBLIC",
  "distribution": {
    "feedDistribution": "MAIN_FEED"
  },
  "lifecycleState": "PUBLISHED"
}
```

**Headers Required:**

```
Authorization: Bearer YOUR_TOKEN
LinkedIn-Version: 202510
X-Restli-Protocol-Version: 2.0.0
Content-Type: application/json
```

---

### 2. Multi-Image Posts (Your Carousel Alternative!)

**Perfect for:** Visual storytelling without needing PDF conversion!

**Limits:**

- **Minimum:** 2 images
- **Maximum:** 20 images
- **Size:** Max 36,152,320 pixels per image
- **Formats:** JPG, PNG, GIF (up to 250 frames)
- **Alt Text:** Up to 4,086 chars per image (recommended: <120 chars)

**How It Works:**

1. Upload each image ‚Üí Get Image URN
2. Create post with array of Image URNs
3. LinkedIn displays as grid/swipeable gallery

**API Example:**

```json
{
  "author": "urn:li:person:YOUR_ID",
  "commentary": "Check out these amazing photos!",
  "content": {
    "multiImage": {
      "images": [
        {
          "id": "urn:li:image:C4D12AQGkQg...",
          "altText": "First image description"
        },
        {
          "id": "urn:li:image:C4D12AQHdBD...",
          "altText": "Second image description"
        }
      ]
    }
  },
  "visibility": "PUBLIC",
  "distribution": {
    "feedDistribution": "MAIN_FEED"
  },
  "lifecycleState": "PUBLISHED"
}
```

**Result:** Grid of images (swipeable on mobile), looks great!

---

### 3. Document Posts (PDF Carousel)

**Perfect for:** Presentations, reports, educational content in carousel format!

**Supported Formats:**

- PDF ‚úÖ
- PPT, PPTX ‚úÖ
- DOC, DOCX ‚úÖ

**Limits:**

- **Max Size:** 100MB
- **Max Pages:** 300 pages

**How It Works:**

1. Upload PDF/document ‚Üí Get Document URN
2. Create post with Document URN
3. **LinkedIn automatically converts to carousel-style viewer!**
4. Users swipe through pages like a carousel

**Upload Process:**

```javascript
// Step 1: Initialize upload
POST /rest/documents?action=initializeUpload
Body: {
  "initializeUploadRequest": {
    "owner": "urn:li:person:YOUR_ID"
  }
}
Response: {
  "value": {
    "uploadUrl": "https://...",
    "document": "urn:li:document:D5510AQFx87..."
  }
}

// Step 2: Upload file
PUT {uploadUrl}
Body: <binary file data>
Headers: { "Content-Type": "application/pdf" }

// Step 3: Create post
POST /rest/posts
Body: {
  "author": "urn:li:person:YOUR_ID",
  "commentary": "Check out this presentation!",
  "content": {
    "media": {
      "title": "My Presentation",
      "id": "urn:li:document:D5510AQFx87..."
    }
  },
  "visibility": "PUBLIC",
  "distribution": { "feedDistribution": "MAIN_FEED" },
  "lifecycleState": "PUBLISHED"
}
```

**Result:** PDF appears as swipeable carousel on LinkedIn!

---

### 4. Single Image Posts

**Simpler than multi-image**, just one image:

```json
{
  "author": "urn:li:person:YOUR_ID",
  "commentary": "Amazing photo!",
  "content": {
    "media": {
      "title": "Photo title",
      "id": "urn:li:image:C4D12AQGkQg..."
    }
  },
  "visibility": "PUBLIC",
  "distribution": { "feedDistribution": "MAIN_FEED" },
  "lifecycleState": "PUBLISHED"
}
```

---

### 5. Video Posts

```json
{
  "author": "urn:li:person:YOUR_ID",
  "commentary": "Watch this!",
  "content": {
    "media": {
      "title": "Video title",
      "id": "urn:li:video:C5F10AQGKQg..."
    }
  },
  "visibility": "PUBLIC",
  "distribution": { "feedDistribution": "MAIN_FEED" },
  "lifecycleState": "PUBLISHED"
}
```

---

## üé® Text Formatting ("little" Format)

### Special Characters That Need Escaping

**Reserved characters:** `|`, `{`, `}`, `@`, `[`, `]`, `(`, `)`, `<`, `>`, `#`, `\`, `*`, `_`, `~`

**How to escape:**

```javascript
// Want to show: "Use * for bullets"
// Send: "Use \\* for bullets"

// Want to show: "Price is $100 (on sale)"
// Send: "Price is $100 \\(on sale\\)"
```

### Hashtags

**Simple way:**

```
"Check out my #coding #tips"
```

**Template way:**

```
"Check out my {hashtag|\\#|coding} {hashtag|\\#|tips}"
```

**Both work!** Simple way is easier.

### Mentions

```
"Great working with @[John Doe](urn:li:person:ABC123)"
"Thanks @[Company Name](urn:li:organization:123456)"
```

### Line Breaks

```javascript
'First paragraph\n\nSecond paragraph\n\nThird paragraph';
```

**Result:**

```
First paragraph

Second paragraph

Third paragraph
```

---

## üì∏ Image Upload Process (Images API)

**Modern approach** (replaces older Assets API):

### Step 1: Initialize Upload

```javascript
POST https://api.linkedin.com/rest/images?action=initializeUpload

Headers: {
  "Authorization": "Bearer YOUR_TOKEN",
  "LinkedIn-Version": "202510",
  "X-Restli-Protocol-Version": "2.0.0",
  "Content-Type": "application/json"
}

Body: {
  "initializeUploadRequest": {
    "owner": "urn:li:person:YOUR_ID"
  }
}

Response: {
  "value": {
    "uploadUrl": "https://api.linkedin.com/mediaUpload/...",
    "image": "urn:li:image:C4D12AQGkQg..."
  }
}
```

### Step 2: Upload Image Binary

```javascript
PUT {uploadUrl from step 1}

Headers: {
  "Authorization": "Bearer YOUR_TOKEN"
}

Body: <image binary data>
```

### Step 3: Use Image URN in Post

Use the `image` URN from Step 1 response in your post.

**Supported Formats:** JPG, PNG, GIF
**Max Pixels:** 36,152,320 total pixels
**No explicit file size limit** (but must be under pixel limit)

---

## üìÑ Document Upload Process (For PDF Carousels)

### Step 1: Initialize Upload

```javascript
POST https://api.linkedin.com/rest/documents?action=initializeUpload

Body: {
  "initializeUploadRequest": {
    "owner": "urn:li:person:YOUR_ID"
  }
}

Response: {
  "value": {
    "uploadUrl": "https://...",
    "document": "urn:li:document:D5510AQFx87..."
  }
}
```

### Step 2: Upload Document

```javascript
PUT {uploadUrl}

Headers: {
  "Content-Type": "application/pdf"  // or application/vnd.ms-powerpoint, etc.
}

Body: <PDF binary data>
```

### Step 3: Create Post with Document

```javascript
POST /rest/posts

Body: {
  "author": "urn:li:person:YOUR_ID",
  "commentary": "Check out this presentation!",
  "content": {
    "media": {
      "title": "My Presentation Title",
      "id": "urn:li:document:D5510AQFx87..."
    }
  },
  "visibility": "PUBLIC",
  "distribution": { "feedDistribution": "MAIN_FEED" },
  "lifecycleState": "PUBLISHED"
}
```

**Result:** LinkedIn shows PDF as carousel-style swipeable document!

**Limits:**

- Max size: 100MB
- Max pages: 300
- Formats: PDF, PPT, PPTX, DOC, DOCX

---

## üéØ "Carousel" Options Summary

### Option 1: Multi-Image Posts (2-20 images)

**Pros:**

- ‚úÖ No conversion needed
- ‚úÖ Direct image upload
- ‚úÖ Grid/swipeable gallery
- ‚úÖ Easier to create

**Cons:**

- ‚ùå Not true "carousel" format (grid layout instead)
- ‚ùå Max 20 images

**Best for:** Photo galleries, product showcases, before/after

---

### Option 2: PDF Document Posts

**Pros:**

- ‚úÖ True carousel-style swiping
- ‚úÖ Professional presentation format
- ‚úÖ Up to 300 pages/slides
- ‚úÖ Can include text overlays, graphics

**Cons:**

- ‚ùå Requires creating PDF first
- ‚ùå Larger file sizes
- ‚ùå More complex to generate programmatically

**Best for:** Presentations, infographics, educational content

---

## üé® Text Best Practices

### Character Limits

- **Maximum:** 3,000 characters
- **Optimal for engagement:** 150-300 words (~800-1,600 chars)
- **Hook:** First 140 characters (mobile truncation)

### Formatting Tips

1. **Start strong:** Put key message in first 140 characters
2. **Use line breaks:** `\n\n` for readability
3. **Hashtags:** 3-5 relevant hashtags (not 20!)
4. **Mentions:** Tag relevant people/companies
5. **Call to action:** End with clear next step

### Example Well-Formatted Post:

```
Hook (140 chars): "Just discovered 3 game-changing productivity hacks that saved me 10 hours this week. Here's what worked:\n\n"

Body:
"1. Time blocking with 90-minute deep work sessions\n
2. Automated email responses for non-urgent requests\n
3. Batch processing similar tasks together\n\n"

CTA: "What's your #1 productivity tip? Drop it in comments! üëá\n\n"

Tags: "#productivity #worklifebalance #efficiency"
```

**Length:** ~380 characters (perfect!)
**Engagement:** High (clear value, easy to read, CTA)

---

## üìã Rate Limits

**LinkedIn API Limits:**

- **150 posts per day** per account
- No official monthly limit (just daily)
- Much more generous than Twitter!

---

## üõ†Ô∏è Implementation Requirements

### APIs We Need to Implement

1. **OAuth 2.0** - Get access token
2. **GET /v2/userinfo** - Get your person URN
3. **POST /rest/images?action=initializeUpload** - Register image upload
4. **PUT {uploadUrl}** - Upload image binary
5. **POST /rest/documents?action=initializeUpload** - Register document upload
6. **PUT {uploadUrl}** - Upload document binary
7. **POST /rest/posts** - Create post (all types)

### Required Headers (CRITICAL!)

**Every API call needs:**

```javascript
{
  "Authorization": "Bearer YOUR_ACCESS_TOKEN",
  "LinkedIn-Version": "202510",  // YYYYMM format
  "X-Restli-Protocol-Version": "2.0.0",
  "Content-Type": "application/json"
}
```

---

## üöÄ Module Capabilities Plan

### bmad/modules/linkedin-api-client/

**Methods to Implement:**

```javascript
class LinkedInClient {
  // Authentication
  async authenticate()           // OAuth flow, get access token
  async getUserId()              // Get person URN

  // Media Upload
  async uploadImage(path)        // ‚Üí Image URN
  async uploadDocument(path)     // ‚Üí Document URN

  // Posting
  async createTextPost(text)     // Text-only
  async createImagePost(text, imagePath)  // Single image
  async createMultiImagePost(text, imagePaths)  // 2-20 images (grid)
  async createDocumentPost(text, pdfPath)  // PDF carousel
  async createVideoPost(text, videoPath)   // Video

  // Utilities
  async formatText(text)         // Escape special characters
  async validatePost(request)    // Validate before posting
}
```

---

## üì∏ Multi-Image vs PDF Carousel Comparison

| Feature            | Multi-Image Posts        | PDF Document Posts          |
| ------------------ | ------------------------ | --------------------------- |
| **Format**         | Grid gallery             | Carousel swipe              |
| **Image Count**    | 2-20 images              | Unlimited (300 pages)       |
| **Creation**       | Upload images directly   | Create PDF first            |
| **Text on Images** | Pre-rendered in image    | Can design in PDF           |
| **File Size**      | No limit (pixel limit)   | 100MB max                   |
| **Best For**       | Photos, screenshots      | Presentations, infographics |
| **Engagement**     | High (visual)            | Very high (professional)    |
| **Effort**         | Low (just upload images) | Medium (create PDF)         |

**Recommendation for Your Agent:**

- **Support BOTH!**
- Multi-Image: Quick and easy for photo posts
- PDF: Professional carousel presentations

---

## üéØ Carousel Strategy

### Use Multi-Image When:

- ‚úÖ You have 2-20 photos/screenshots
- ‚úÖ Images are standalone (no text overlay needed)
- ‚úÖ Quick posting (no PDF creation)
- ‚úÖ Product showcases, photo galleries

### Use PDF When:

- ‚úÖ You want true carousel swipe experience
- ‚úÖ Content has text overlays/infographics
- ‚úÖ Professional presentations
- ‚úÖ Educational/tutorial content
- ‚úÖ More than 20 slides needed

---

## üíª Implementation Complexity

### Easier Than Twitter! ‚úÖ

**Why:**

1. **OAuth 2.0** (vs Twitter's OAuth 1.0a)
   - No signature generation
   - Just Bearer token
   - Simpler refresh flow

2. **Single API version** (vs Twitter's v1.1 + v2 hybrid)
   - All endpoints use `rest/` prefix
   - Consistent headers
   - Uniform response format

3. **Simpler media upload**
   - Initialize ‚Üí Upload ‚Üí Done
   - No chunking for images
   - Clear URN responses

**Estimated Time:** 1 hour (vs Twitter's 1.5-2 hours)

---

## üîê Authentication Flow

### Step 1: Get Authorization Code

```
https://www.linkedin.com/oauth/v2/authorization?
  response_type=code
  &client_id=86litgbscvi400
  &redirect_uri=http://localhost:3000/callback
  &scope=openid%20profile%20w_member_social
```

User authorizes ‚Üí Redirects to:

```
http://localhost:3000/callback?code=AQT...&state=...
```

### Step 2: Exchange for Access Token

```javascript
POST https://www.linkedin.com/oauth/v2/accessToken

Body (form-urlencoded):
{
  grant_type: "authorization_code",
  code: "AQT...",
  client_id: "86litgbscvi400",
  client_secret: "YOUR_LINKEDIN_CLIENT_SECRET",
  redirect_uri: "http://localhost:3000/callback"
}

Response:
{
  "access_token": "AQV...",
  "expires_in": 5184000  // 60 days
}
```

### Step 3: Get User ID

```javascript
GET https://api.linkedin.com/v2/userinfo

Headers: {
  "Authorization": "Bearer AQV..."
}

Response:
{
  "sub": "abc123xyz",  // Your person ID
  "name": "Your Name",
  "email": "you@email.com"
}
```

**Person URN:** `urn:li:person:abc123xyz`

---

## üì¶ Dependencies Needed

```json
{
  "dependencies": {
    "axios": "^1.6.0",
    "form-data": "^4.0.0"
  }
}
```

**That's it!** No special OAuth libraries needed (unlike Twitter).

---

## üéØ Recommended Implementation Order

### Phase 1: Core Posting (30 min)

1. OAuth 2.0 flow
2. Get user ID
3. Text-only posting
4. **Test:** Post to your personal LinkedIn

### Phase 2: Images (20 min)

1. Single image upload
2. Image post creation
3. **Test:** Post with 1 image

### Phase 3: Multi-Image (15 min)

1. Multiple image upload
2. Multi-image post creation
3. **Test:** Post with 3-5 images (grid carousel!)

### Phase 4: PDF Carousel (15 min)

1. Document upload
2. Document post creation
3. **Test:** Upload a PDF, see carousel on LinkedIn

**Total:** ~1 hour 20 minutes for EVERYTHING!

---

## ‚úÖ What You'll Be Able to Do

After implementation:

**Text Posts:**

```javascript
await linkedin.createPost({
  text: 'Your 3,000 character post with #hashtags and @mentions',
});
```

**Multi-Image Carousel (Easy):**

```javascript
await linkedin.createMultiImagePost({
  text: 'Check out these photos!',
  images: [
    { path: '/path/to/image1.jpg', altText: 'First photo' },
    { path: '/path/to/image2.jpg', altText: 'Second photo' },
    { path: '/path/to/image3.jpg', altText: 'Third photo' },
  ],
});
```

**PDF Carousel (Professional):**

```javascript
await linkedin.createDocumentPost({
  text: 'My presentation on social media automation',
  document: {
    path: '/path/to/presentation.pdf',
    title: 'Social Media Automation Guide',
  },
});
```

**Result:** Beautiful carousel on your personal LinkedIn profile!

---

## üö® Critical Implementation Notes

### 1. LinkedIn-Version Header is MANDATORY

**Format:** `YYYYMM` (current month)
**Example:** `"LinkedIn-Version": "202510"`

**Without this:** API calls fail with 400 error

### 2. X-Restli-Protocol-Version is MANDATORY

**Value:** Always `"2.0.0"`

**Without this:** API calls fail

### 3. Person URN Format

**Correct:** `urn:li:person:abc123xyz`
**Source:** `/v2/userinfo` returns `sub` field
**Usage:** Every post needs this as `author`

### 4. Text Must Be Escaped

**Before sending:**

```javascript
function escapeLinkedInText(text) {
  const reserved = ['|', '{', '}', '@', '[', ']', '(', ')', '<', '>', '#', '\\', '*', '_', '~'];
  let escaped = text;

  // Only escape if not part of hashtag/mention syntax
  // Simple hashtags like #coding don't need escaping
  // Only escape if these chars are used as literal text

  return escaped;
}
```

**Note:** Simple hashtags (`#coding`) and mentions work without manual escaping!

---

## üéì Content Best Practices

### LinkedIn Prefers SHORT Text

**Optimal lengths:**

- **Hook:** 140 characters (mobile fold)
- **Total:** 150-300 words (800-1,600 chars)
- **Never:** Use full 3,000 chars (engagement drops!)

### Format for Readability

```
Strong hook in first line

Key point 1

Key point 2

Key point 3

Call to action

#hashtag1 #hashtag2 #hashtag3
```

**Line breaks are your friend!**

---

## üìä Complete Feature Matrix

| Content Type     | API Endpoint | Upload Required | Max Count   | Your Use Case         |
| ---------------- | ------------ | --------------- | ----------- | --------------------- |
| **Text Only**    | /rest/posts  | No              | 3,000 chars | Quick updates         |
| **Single Image** | /rest/posts  | Images API      | 1 image     | Photo posts           |
| **Multi-Image**  | /rest/posts  | Images API      | 2-20 images | Photo carousel        |
| **PDF Carousel** | /rest/posts  | Documents API   | 1 PDF       | Professional carousel |
| **Video**        | /rest/posts  | Videos API      | 1 video     | Video content         |
| **Article**      | /rest/posts  | No              | 125k+ chars | Long-form             |
| **Poll**         | /rest/posts  | No              | Options     | Engagement            |

---

## üöÄ Module Implementation Blueprint

### File Structure

```
bmad/modules/linkedin-api-client/
‚îú‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ index.js
‚îú‚îÄ‚îÄ config.js
‚îú‚îÄ‚îÄ lib/
‚îÇ   ‚îú‚îÄ‚îÄ auth.js         # OAuth 2.0 flow
‚îÇ   ‚îú‚îÄ‚îÄ client.js       # Main LinkedInClient class
‚îÇ   ‚îú‚îÄ‚îÄ images.js       # Image upload
‚îÇ   ‚îú‚îÄ‚îÄ documents.js    # PDF upload
‚îÇ   ‚îú‚îÄ‚îÄ posts.js        # Post creation
‚îÇ   ‚îú‚îÄ‚îÄ formatter.js    # Text escaping
‚îÇ   ‚îî‚îÄ‚îÄ validator.js    # Input validation
‚îî‚îÄ‚îÄ __tests__/
    ‚îú‚îÄ‚îÄ integration.test.js
    ‚îî‚îÄ‚îÄ validator.test.js
```

### Key Methods

```javascript
// Authentication
async authenticate() ‚Üí access_token
async getUserId(token) ‚Üí person URN

// Media Upload
async uploadImage(path, token) ‚Üí image URN
async uploadImages(paths[], token) ‚Üí image URNs[]
async uploadDocument(path, token) ‚Üí document URN

// Posting
async createTextPost(token, userId, text)
async createImagePost(token, userId, text, imageUrn)
async createMultiImagePost(token, userId, text, imageUrns[])
async createDocumentPost(token, userId, text, docUrn, title)
async createVideoPost(token, userId, text, videoUrn)

// Utilities
formatText(text) ‚Üí escaped text
validatePost(request) ‚Üí {valid, errors}
```

---

## ‚ö° Quick Comparison: LinkedIn vs Twitter

| Feature         | LinkedIn           | Twitter               |
| --------------- | ------------------ | --------------------- |
| **OAuth**       | 2.0 (simple)       | 1.0a (complex)        |
| **Auth Header** | Bearer token       | Signature per request |
| **Text Limit**  | 3,000 chars        | 25,000 (Premium)      |
| **Images/Post** | 1-20               | 1-4                   |
| **Carousel**    | Multi-image OR PDF | Not supported         |
| **Rate Limit**  | 150/day            | 1,500/month           |
| **Complexity**  | **Easier!**        | Medium                |

**LinkedIn is simpler to implement than Twitter!**

---

## üéØ Confidence Assessment

### For Building LinkedIn Module: **9.5/10**

**Why so high:**

- ‚úÖ OAuth 2.0 is simpler than Twitter's OAuth 1.0a
- ‚úÖ You already built Twitter successfully
- ‚úÖ Clear API documentation
- ‚úÖ Fewer edge cases than Twitter
- ‚úÖ Consistent endpoint structure
- ‚úÖ Your products already approved

**Only risks:**

- ‚ö†Ô∏è First time with Documents API (PDF upload)
- ‚ö†Ô∏è Text escaping rules (minor)

**Mitigation:**

- Start with text + images (proven)
- Add PDF support incrementally
- Comprehensive testing

**Expected:** One-pass implementation success

---

## üìö Reference Documentation

### Official Microsoft Learn Docs

- [Posts API](https://learn.microsoft.com/en-us/linkedin/marketing/community-management/shares/posts-api)
- [Images API](https://learn.microsoft.com/en-us/linkedin/marketing/community-management/shares/images-api)
- [Documents API](https://learn.microsoft.com/en-us/linkedin/marketing/community-management/shares/documents-api)
- [MultiImage API](https://learn.microsoft.com/en-us/linkedin/marketing/community-management/shares/multiimage-post-api)
- [little Text Format](https://learn.microsoft.com/en-us/linkedin/marketing/community-management/shares/little-text-format)
- [OAuth 2.0](https://learn.microsoft.com/en-us/linkedin/shared/authentication/authentication)

### Recent Implementation Guides

- [Posting to LinkedIn via API (Feb 2025)](https://marcusnoble.co.uk/2025-02-02-posting-to-linkedin-via-the-api/)

---

## üé¨ Ready to Build!

**What you'll get:**

‚úÖ **Post to YOUR personal LinkedIn account**
‚úÖ **Text posts** (up to 3,000 chars, optimized formatting)
‚úÖ **Single images** (photos, graphics)
‚úÖ **Multi-image posts** (2-20 images, grid carousel!)
‚úÖ **PDF carousels** (presentations, infographics)
‚úÖ **Video posts**
‚úÖ **Input validation**
‚úÖ **Text escaping** (automatic)
‚úÖ **Rate limiting** (150/day tracking)

**Time:** ~1-1.5 hours
**Confidence:** 9.5/10

---

**Should I create the LinkedIn PRP now?** üöÄ
