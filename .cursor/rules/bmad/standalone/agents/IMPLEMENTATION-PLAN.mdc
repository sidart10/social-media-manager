---
description: BMAD STANDALONE: IMPLEMENTATION-PLAN
globs: 
alwaysApply: false
---

# AI Video Agent - Complete Implementation Plan

**Created**: October 25, 2025
**Based On**: Tree analysis + comprehensive file review
**Total Estimated Time**: 6-8 hours

---

## 📊 CURRENT STATE ANALYSIS

### Directory Structure (Tree View)

```
ai-video-agent/
├── Agent Definition
│   └── ai-video-agent.agent.yaml (7.6K) ✅ COMPLETE
│
├── Documentation
│   ├── README.md (8.3K) ✅ COMPLETE
│   ├── UPGRADE-SUMMARY.md (9.6K) ✅ COMPLETE
│   ├── ULTRATHINK-ANALYSIS.md (17K) ✅ COMPLETE
│   ├── AGENT_BUILD_COMPLETE.md (8.5K)
│   ├── FIXES_APPLIED.md (6.2K)
│   └── MCP_SERVERS_UPDATED.md (6.3K)
│
├── Sidecar Resources (15MB total)
│   ├── config.yaml (5.6K) ✅ UPDATED (smart routing added)
│   ├── instructions.md (15K) ✅ UPDATED (Virtual Film Producer added)
│   ├── platform-specs.yaml (2.9K) ✅ COMPLETE
│   ├── video-prompting-templates.yaml (18K) ✅ NEW (comprehensive)
│   ├── consent/ (empty directory)
│   └── outputs/
│       └── veo3/ (15MB - 5 generated videos)
│           ├── veo3_video_20251025_162345.mp4 (2.3M)
│           ├── veo3_video_20251025_173841.mp4 (4.7M)
│           ├── veo3_video_20251025_173943.mp4 (2.5M)
│           ├── veo3_video_20251025_174148.mp4 (1.5M)
│           └── veo3_video_20251025_175933.mp4 (4.3M)
│
└── Workflows (29K total)
    ├── Fully Implemented ✅
    │   ├── talking-head-instructions.md (212 lines) ✅ COMPLETE
    │   └── generate-talking-head.yaml (18 lines) ✅ COMPLETE
    │
    ├── Needs Tool Name Fixes ❌
    │   ├── scene-generation-instructions.md (182 lines) ❌ BROKEN TOOLS
    │   ├── generate-scene.yaml (18 lines) ⚠️
    │   ├── test-hooks-instructions.md (33 lines) ❌ BROKEN TOOLS
    │   └── test-hooks.yaml (11 lines) ⚠️
    │
    ├── Smart Routers (Partial) ⚠️
    │   ├── reels-instructions.md (48 lines) ✅ Sora2 ✓, missing Veo3/enhancements
    │   ├── generate-reels.yaml (17 lines)
    │   ├── youtube-short-instructions.md (31 lines) ⚠️ Needs full implementation
    │   ├── generate-youtube-short.yaml (13 lines)
    │   ├── tiktok-instructions.md (28 lines) ⚠️ Needs full implementation
    │   ├── generate-tiktok.yaml (13 lines)
    │   ├── youtube-instructions.md (22 lines) ⚠️ Needs full implementation
    │   └── generate-youtube.yaml (13 lines)
    │
    ├── Stubs (Incomplete) 🟠
    │   ├── hybrid-instructions.md (27 lines) 🟠 Basic outline only
    │   ├── generate-hybrid.yaml (12 lines)
    │   ├── montage-instructions.md (26 lines) 🟠 Basic outline only
    │   ├── generate-montage.yaml (12 lines)
    │   ├── setup-avatars-instructions.md (39 lines) ⚠️ Basic functionality
    │   └── setup-avatars.yaml (10 lines)
```

---

## 🔍 MCP TOOL USAGE AUDIT

### ✅ CORRECT Tool References:

| File                            | Tools Used                                                                                                                           | Status         |
| ------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------ | -------------- |
| `talking-head-instructions.md`  | `mcp__heygen__list_avatars<br>``mcp__heygen__list_voices<br>``mcp__heygen__create_avatar_video<br>``mcp__heygen__check_video_status` | ✅ ALL CORRECT |
| `setup-avatars-instructions.md` | `mcp__heygen__get_avatar_groups<br>``mcp__heygen__get_avatars_in_avatar_group`                                                       | ✅ ALL CORRECT |
| `reels-instructions.md`         | `mcp__sora2__create_video<br>``mcp__sora2__get_video_status`                                                                         | ✅ ALL CORRECT |
| `hybrid-instructions.md`        | `mcp__sora2__merge_videos`                                                                                                           | ✅ CORRECT     |
| `montage-instructions.md`       | `mcp__sora2__create_fade_animation<br>``mcp__sora2__merge_videos`                                                                    | ✅ ALL CORRECT |

### ❌ BROKEN Tool References:

| File                               | Line | Broken Tool                         | Correct Tool                   | Fix Required |
| ---------------------------------- | ---- | ----------------------------------- | ------------------------------ | ------------ |
| `scene-generation-instructions.md` | 109  | `mcp__veo__video_story_generate` ❌ | `mcp__veo3__generate_video` ✅ | CRITICAL     |
| `scene-generation-instructions.md` | 122  | `mcp__veo__video_story_status` ❌   | **REMOVE** (Veo3 is blocking)  | CRITICAL     |
| `test-hooks-instructions.md`       | 22   | `mcp__veo__generate_video` ❌       | `mcp__veo3__generate_video` ✅ | HIGH         |

---

## 🎯 IMPLEMENTATION STATUS

### Workflow Completion Matrix

| Workflow                   | YAML | Instructions | Tools        | Enhanced Prompting | Sora2 Integration | Status          |
| -------------------------- | ---- | ------------ | ------------ | ------------------ | ----------------- | --------------- |
| **Talking Head**           | ✅   | ✅ (212L)    | ✅ Correct   | ❌ Not integrated  | N/A               | **90% READY**   |
| **Scene Generation**       | ✅   | ⚠️ (182L)    | ❌**BROKEN** | ❌ Not integrated  | ⚠️ Veo only       | **40% BROKEN**  |
| ** and update the pReels** | ✅   | ⚠️ (48L)     | ✅ Sora2 ✓   | ❌ Not integrated  | ✅ Inline         | **60% PARTIAL** |
| **YouTube Short**          | ✅   | ⚠️ (31L)     | ⚠️ Missing   | ❌ Not integrated  | ❌ Missing        | **30% STUB**    |
| **TikTok**                 | ✅   | ⚠️ (28L)     | ⚠️ Missing   | ❌ Not integrated  | ❌ Missing        | **30% STUB**    |
| **YouTube**                | ✅   | ⚠️ (22L)     | ⚠️ Missing   | ❌ Not integrated  | ❌ Missing        | **30% STUB**    |
| **Hybrid**                 | ✅   | 🟠 (27L)     | ✅ Sora2 ✓   | ❌ Not integrated  | ⚠️ Partial        | **20% STUB**    |
| **Montage**                | ✅   | 🟠 (26L)     | ✅ Sora2 ✓   | N/A                | ⚠️ Partial        | **20% STUB**    |
| **Test Hooks**             | ✅   | ⚠️ (33L)     | ❌**BROKEN** | ❌ Not integrated  | ❌ Missing        | **20% STUB**    |
| **Setup Avatars**          | ✅   | ⚠️ (39L)     | ✅ Correct   | N/A                | N/A               | **60% BASIC**   |

**Overall Completion**: **45%**

---

## 🚨 CRITICAL ISSUES (Must Fix First)

### Issue #1: Broken Veo Tool Names (BLOCKING)

**Impact**: Scene generation workflow will fail 100% of the time

**Files Affected**:

- `workflows/scene-generation-instructions.md` (lines 109, 122)
- `workflows/test-hooks-instructions.md` (line 22)

**Fix**:

```bash
# Line 109: Change
mcp__veo__video_story_generate
# To:
mcp__veo3__generate_video

# Line 122: DELETE entire polling logic (Veo3 is blocking, no separate status call)

# Note: Veo3 generate_video returns video_path directly, no job_id
```

**Est. Time**: 15 minutes

---

### Issue #2: Veo3 Aspect Ratio Not Specified

**Impact**: All Veo3 videos default to 16:9, even when 9:16 requested

**Problem**: Current workflows don't pass aspect ratio parameter

**Investigation Needed**:

1. Check if `mcp__veo3__generate_video` accepts `aspect_ratio` parameter
2. Test: Does prompt text "Shot in 9:16 vertical" work?
3. If neither work, check Veo3 MCP source code

**Fix Options**:

- **Option A**: Add `aspect_ratio='9:16'` parameter (if supported)
- **Option B**: Include in prompt: "Shot in 9:16 vertical format for social media"
- **Option C**: Use different model/endpoint for vertical

**Est. Time**: 30 minutes (investigation + fix)

---

### Issue #3: Enhanced Prompting Not Integrated

**Impact**: Missing professional filmmaking quality

**What's Missing**:

- No workflows load `video-prompting-templates.yaml`
- No Virtual Film Producer structure applied
- Basic prompts go directly to AI

**Required Integration Point**:
Add to ALL generation workflows (scene, reels, tiktok, youtube-short):

```markdown
<step n="X" goal="Enhance Prompt with Virtual Film Producer">
<action>Load {agent-folder}/ai-video-agent-sidecar/video-prompting-templates.yaml</action>

<action>Analyze user input: {user_prompt}</action>

<action>Apply Virtual Film Producer structure:</action>
<action>1. Scene Description: {user_input}</action>
<action>2. Camera Movement: [Auto-suggest based on scene type]</action>
<action> - Action scenes → Tracking shot, handheld</action>
<action> - Landscapes → Slow crane shot, dolly-in</action>
<action> - Product → Orbit, slow dolly-in</action>
<action>3. Lighting: [Auto-suggest based on mood]</action>
<action> - Bright/Happy → High-key, soft natural light</action>
<action> - Dramatic → Low-key, backlight, chiaroscuro</action>
<action> - Tech/Futuristic → Neon accents, volumetric light</action>
<action>4. Color & Tone: [Auto-suggest based on platform]</action>
<action> - Social media → Vibrant, high saturation, teal & orange</action>
<action> - Cinematic → Desaturated, film grain, muted palette</action>
<action>5. Technical Format:</action>
<action> - Aspect ratio: {aspect_ratio} from platform</action>
<action> - Lens: 35mm or 50mm prime</action>
<action> - Quality: 1080p HD or 4K</action>

<action>Build enhanced prompt:</action>
<action>"{scene} | {camera_movement} | {lighting} | {color_tone} | {technical}"</action>

<action>Display original vs enhanced</action>
<ask response="use_enhanced">Use enhanced prompt? [y/n/edit]</ask>

<check if="use_enhanced == 'edit'">
  <ask response="custom_enhancements">What changes?</ask>
  <action>Apply custom modifications</action>
</check>

<check if="use_enhanced == 'y' or use_enhanced == 'edit'">
  <action>Set final_prompt = enhanced_prompt</action>
</check>

<check if="use_enhanced == 'n'">
  <action>Set final_prompt = user_prompt</action>
</check>

<template-output>final_prompt, enhancement_applied</template-output>
</step>
```

**Est. Time**: 2 hours (add to 4-5 workflows)

---

## 📋 6-PHASE IMPLEMENTATION PLAN

---

### **PHASE 1: CRITICAL FIXES** (Est. 1.5 hours) 🔴

#### Goal: Make scene generation work

**Tasks**:

1. **Fix scene-generation-instructions.md** (30 mins)
   - [ ] Line 109: Change `mcp__veo__video_story_generate` → `mcp__veo3__generate_video`
   - [ ] Lines 120-142: Replace polling logic with blocking call handling
   - [ ] Update to match Veo3 MCP signature: `generate_video(prompt, model)`
   - [ ] Remove `job_id` references (Veo3 returns video_path directly)
   - [ ] Test with sample prompt

2. **Investigate Veo3 Aspect Ratio** (30 mins)
   - [ ] Check `mcp__veo3__generate_video` tool signature
   - [ ] Test Option A: Try `aspect_ratio='9:16'` parameter
   - [ ] Test Option B: Try prompt text "Shot in 9:16 vertical format"
   - [ ] Document working method
   - [ ] Update scene generation workflow with working method

3. **Fix test-hooks-instructions.md** (15 mins)
   - [ ] Line 22: Change `mcp__veo__generate_video` → `mcp__veo3__generate_video`
   - [ ] Update to use Veo3 blocking call pattern

4. **Verify Talking Head Workflow** (15 mins)
   - [ ] Test end-to-end with real avatar/voice IDs
   - [ ] Confirm HeyGen tools work correctly
   - [ ] Test polling logic
   - [ ] Generate test video

**Success Criteria**:

- ✅ Can generate Veo3 scene video (16:9)
- ✅ Can generate Veo3 scene video (9:16)
- ✅ Can generate HeyGen talking head
- ✅ No MCP tool errors

**Deliverable**: Working scene generation + talking head workflows

---

### **PHASE 2: SORA 2 SMART ROUTING** (Est. 2 hours) 🟡

#### Goal: Integrate Sora 2 as cinematic option with smart routing

**Tasks**:

1. **Create Sora2 Scene Generation Workflow** (45 mins)
   - [ ] Copy `scene-generation-instructions.md` → `scene-generation-sora2-instructions.md`
   - [ ] Replace Veo3 logic with Sora2:
     ```markdown
     <action>Call mcp**sora2**create_video</action>
     <action>Params: prompt={prompt}, model='sora-2', size={size}, seconds={duration}</action>
     <action>Receive: video_id</action>
     <action>Poll with mcp**sora2**get_video_status until status=='completed'</action>
     <action>Retrieve video URL from response</action>
     ```
   - [ ] Add duration options: 4s, 8s, 12s
   - [ ] Add size options based on aspect ratio:
     - 9:16: `720x1280` or `1024x1792`
     - 16:9: `1280x720` or `1792x1024`
   - [ ] Add watermark preservation notice
   - [ ] Test end-to-end

2. **Implement Smart Routing in Scene Generation** (45 mins)
   - [ ] Update `scene-generation-instructions.md` Step 1
   - [ ] Add quality choice:

     ```markdown
     <ask response="quality_level">
     Quality level?
     1. Fast (Veo 3 - 60-90s generation)
     2. Cinematic (Sora 2 - premium quality, C2PA watermark)
     </ask>

     <check if="quality_level == 1 or contains('fast', 'quick', 'draft')">
       <action>Set provider = 'veo3'</action>
       <action>Proceed with Veo3 workflow</action>
     </check>

     <check if="quality_level == 2 or contains('cinematic', 'premium', 'quality')">
       <action>Set provider = 'sora2'</action>
       <action>Invoke: scene-generation-sora2-instructions.md</action>
     </check>
     ```

   - [ ] Wire routing logic from config.yaml
   - [ ] Test both paths

3. **Create Video Merge Workflow** (30 mins)
   - [ ] Create `workflows/merge-videos-instructions.md`
   - [ ] Flow:

     ```markdown
     <step n="1">
       <ask>Provide video URLs/paths to merge (comma-separated):</ask>
       <action>Parse into array</action>
     </step>

     <step n="2">
       <action>Call mcp__sora2__merge_videos(video_urls=array, output_path="merged.mp4")</action>
       <action>Display: Merging with fade transitions...</action>
       <action>Display result path when done</action>
     </step>
     ```

   - [ ] Create `workflows/merge-videos.yaml` (point to instructions)
   - [ ] Add to agent menu
   - [ ] Test with 2-3 clips

**Success Criteria**:

- ✅ Can generate Sora2 video (cinematic quality)
- ✅ Smart routing works (keyword detection)
- ✅ Can merge multiple videos with fades
- ✅ Watermark preserved in Sora2 videos

**Deliverable**: Full Veo3 + Sora2 scene generation with smart routing + video merging

---

### **PHASE 3: ENHANCED PROMPTING INTEGRATION** (Est. 2 hours) 🟡

#### Goal: Wire Virtual Film Producer methodology into all generation workflows

**Tasks**:

1. **Create Shared Prompt Enhancement Module** (45 mins)
   - [ ] Create `workflows/lib/enhance-prompt.md` (reusable)
   - [ ] Implement Virtual Film Producer logic:
     ```markdown
     <action>Load video-prompting-templates.yaml</action>
     <action>Analyze user input for scene type, mood, action</action>
     <action>Auto-suggest camera movement based on scene</action>
     <action>Auto-suggest lighting based on mood</action>
     <action>Auto-suggest color grading based on platform</action>
     <action>Set technical specs from platform</action>
     <action>Build: [Scene] | [Camera] | [Lighting] | [Color] | [Technical]</action>
     <action>Return enhanced_prompt</action>
     ```
   - [ ] Test standalone

2. **Integrate into Scene Generation** (30 mins)
   - [ ] Add enhancement step after platform selection
   - [ ] Wire to both Veo3 and Sora2 paths
   - [ ] Test with basic input → enhanced output
   - [ ] Compare video quality before/after

3. **Integrate into Platform Quick Commands** (45 mins)
   - [ ] Update `reels-instructions.md` (add enhancement step)
   - [ ] Update `youtube-short-instructions.md` (add enhancement step)
   - [ ] Update `tiktok-instructions.md` (add enhancement step)
   - [ ] Update `youtube-instructions.md` (add enhancement step)
   - [ ] Test each platform command

**Success Criteria**:

- ✅ Basic prompt "city at sunset" → Enhanced with camera/lighting/color
- ✅ Enhanced prompts produce better quality videos
- ✅ Works across all generation workflows
- ✅ User can opt-out if desired

**Deliverable**: Professional-quality prompts for all video generation

---

### **PHASE 4: IMAGE-TO-VIDEO WORKFLOWS** (Est. 1.5 hours) 🟠

#### Goal: Enable animating static images

**Tasks**:

1. **Create Veo3 Image-to-Video Workflow** (45 mins)
   - [ ] Create `workflows/animate-image-veo3-instructions.md`
   - [ ] Flow:

     ```markdown
     <step n="1">
       <ask>Path to image:</ask>
       <action>Validate file exists</action>
     </step>

     <step n="2">
       <ask>Desired motion (dolly-in, pan-right, parallax, orbit, etc.):</ask>
       <action>Load motion vocabulary from templates</action>
       <action>Build motion prompt using image-to-video structure:</action>
       <action>"[Motion] | [Cinematic Enhancement] | [Technical]"</action>
     </step>

     <step n="3">
       <action>Call mcp__veo3__generate_video_from_image(prompt, image_path, model)</action>
       <action>Handle blocking response</action>
       <action>Display video path</action>
     </step>
     ```

   - [ ] Create `workflows/animate-image-veo3.yaml`
   - [ ] Test with sample image

2. **Create Sora2 Fade Animation Workflow** (30 mins)
   - [ ] Create `workflows/animate-image-sora2-instructions.md`
   - [ ] Flow:

     ```markdown
     <step n="1">
       <ask>Path to image:</ask>
       <action>Validate file exists</action>
     </step>

     <step n="2">
       <ask>Fade type? [in/out/in-out]</ask>
       <ask>Duration (seconds)?</ask>
     </step>

     <step n="3">
       <action>Call mcp__sora2__create_fade_animation(image_path, duration, fade_type)</action>
       <action>Display video path</action>
     </step>
     ```

   - [ ] Create `workflows/animate-image-sora2.yaml`
   - [ ] Test with sample image

3. **Add to Agent Menu** (15 mins)
   - [ ] Update `ai-video-agent.agent.yaml` menu
   - [ ] Add `*animate-image` command
   - [ ] Route to appropriate workflow based on motion type

**Success Criteria**:

- ✅ Can animate image with Veo3 (motion effects)
- ✅ Can animate image with Sora2 (fade effects)
- ✅ Can use user's face photo for video generation

**Deliverable**: Image-to-video capabilities (both providers)

---

### **PHASE 5: PLATFORM QUICK COMMANDS** (Est. 1.5 hours) 🟠

#### Goal: Complete all platform-specific workflows

**Tasks**:

1. **Complete Instagram Reels Workflow** (20 mins)
   - [ ] Already has Sora2 inline, just needs:
   - [ ] Add Veo3 path with tool name fix
   - [ ] Wire enhanced prompting
   - [ ] Test all 3 paths (talking head, veo3, sora2)

2. **Complete YouTube Shorts Workflow** (20 mins)
   - [ ] Update `youtube-short-instructions.md`
   - [ ] Copy pattern from reels (change hook timing to 3s)
   - [ ] Add all 3 generation paths
   - [ ] Wire enhanced prompting
   - [ ] Test end-to-end

3. **Complete TikTok Workflow** (20 mins)
   - [ ] Update `tiktok-instructions.md`
   - [ ] Copy pattern from reels (change hook timing to 1s)
   - [ ] Add all 3 generation paths
   - [ ] Wire enhanced prompting
   - [ ] Test end-to-end

4. **Complete YouTube Standard Workflow** (20 mins)
   - [ ] Update `youtube-instructions.md`
   - [ ] Use 16:9 aspect ratio
   - [ ] Change hook timing to 8s
   - [ ] Suggest longer duration (Sora2 12s or multiple clips)
   - [ ] Wire enhanced prompting
   - [ ] Test end-to-end

5. **Verify All Platform Commands** (30 mins)
   - [ ] Test `*reels` end-to-end
   - [ ] Test `*youtube-short` end-to-end
   - [ ] Test `*tiktok` end-to-end
   - [ ] Test `*youtube` end-to-end
   - [ ] Document any issues

**Success Criteria**:

- ✅ All platform quick commands work
- ✅ Correct aspect ratios applied
- ✅ Correct hook timings enforced
- ✅ Smart routing works (Veo3 vs Sora2)
- ✅ Enhanced prompting applies

**Deliverable**: Production-ready platform commands

---

### **PHASE 6: COMPLETE STUBS & POLISH** (Est. 1.5 hours) 🟢

#### Goal: Finish incomplete workflows and polish

**Tasks**:

1. **Complete Hybrid Workflow** (30 mins)
   - [ ] Expand `hybrid-instructions.md` from 27 lines to full implementation
   - [ ] Add segment planning UI
   - [ ] Implement:
     ```markdown
     <step n="1">List available videos (HeyGen, Veo3, Sora2 outputs)</step>
     <step n="2">User selects clips to merge</step>
     <step n="3">Call merge_videos with selected clips</step>
     <step n="4">Deliver merged result</step>
     ```
   - [ ] Test with talking head + b-roll combo

2. **Complete Montage Workflow** (30 mins)
   - [ ] Expand `montage-instructions.md`
   - [ ] Implement:
     ```markdown
     <step n="1">User provides list of image paths</step>
     <step n="2">For each image: create_fade_animation (3s each)</step>
     <step n="3">Collect all video clips</step>
     <step n="4">Call merge_videos to stitch with fades</step>
     <step n="5">Deliver montage video</step>
     ```
   - [ ] Test with 3-4 images

3. **Enhance Setup Avatars Workflow** (15 mins)
   - [ ] Add consent artifact management
   - [ ] Add voice matching recommendations
   - [ ] Add avatar preview display
   - [ ] Test with real HeyGen account

4. **Complete Test Hooks Workflow** (15 mins)
   - [ ] Fix tool name (`mcp__veo3__generate_video`)
   - [ ] Implement A/B testing logic:
     ```markdown
     <step n="1">User provides base script</step>
     <step n="2">Generate 3 hook variations</step>
     <step n="3">Use HeyGen to generate all 3 videos</step>
     <step n="4">Display all 3 for comparison</step>
     ```
   - [ ] Test with sample script

**Success Criteria**:

- ✅ Can create hybrid multi-source videos
- ✅ Can create image montages
- ✅ Setup avatars has full consent workflow
- ✅ Can A/B test different hooks
- ✅ All menu items functional

**Deliverable**: 100% complete AI Video Agent

---

## 📊 VALIDATION CHECKLIST

### Critical Functionality (Must Pass):

- [ ] Generate HeyGen talking head (9:16 and 16:9)
- [ ] Generate Veo3 scene (9:16 vertical)
- [ ] Generate Veo3 scene (16:9 horizontal)
- [ ] Generate Sora2 scene (cinematic quality)
- [ ] Smart routing works (Veo3 vs Sora2 based on keywords)
- [ ] Merge multiple videos with fades
- [ ] Animate static image (Veo3)
- [ ] Fade animation for image (Sora2)

### Platform Commands (Must Pass):

- [ ] `*create-talking-head` works
- [ ] `*create-scene` works (both Veo3 and Sora2)
- [ ] `*reels` works
- [ ] `*youtube-short` works
- [ ] `*tiktok` works
- [ ] `*youtube` works
- [ ] `*create-hybrid` works
- [ ] `*create-montage` works
- [ ] `*test-hooks` works
- [ ] `*setup-avatars` works

### Enhanced Features (Must Pass):

- [ ] Enhanced prompting applies Virtual Film Producer
- [ ] Prompts show before/after enhancement
- [ ] User can opt-out of enhancement
- [ ] Cost estimation shows before generation
- [ ] Metadata saves with every video
- [ ] No MCP tool name errors

### Quality (Should Pass):

- [ ] Enhanced prompts produce noticeably better videos
- [ ] Aspect ratios match requested format
- [ ] Platform specs enforced (hook timing, captions, duration)
- [ ] Workflows handle errors gracefully
- [ ] All generated videos have metadata JSON

---

## 🎯 EXECUTION STRATEGY

### Recommended Approach: **Sequential Phases**

**Week 1 - Critical Path**:

- Day 1: Phase 1 (Critical Fixes) - 1.5 hours
- Day 2: Phase 2 (Sora 2 Smart Routing) - 2 hours
- Day 3: Phase 3 (Enhanced Prompting) - 2 hours

**Week 2 - Feature Complete**:

- Day 4: Phase 4 (Image-to-Video) - 1.5 hours
- Day 5: Phase 5 (Platform Commands) - 1.5 hours
- Day 6: Phase 6 (Stubs & Polish) - 1.5 hours

**Total**: ~10 hours spread over 6 days

---

### Alternative Approach: **Sprint to Minimum Viable**

**Session 1 (2 hours)**: Phase 1 + Phase 2 partial

- Fix broken tools
- Get Veo3 working (both aspect ratios)
- Add basic Sora2 scene generation

**Session 2 (2 hours)**: Phase 2 complete + Phase 3 partial

- Complete smart routing
- Start enhanced prompting (scene generation only)

**Session 3 (2 hours)**: Phase 3 complete + Phase 5 partial

- Complete enhanced prompting
- Fix 2-3 platform commands

**Session 4 (2 hours)**: Phase 4 + Phase 5 complete

- Image-to-video workflows
- Finish platform commands

**Session 5 (2 hours)**: Phase 6 + Testing

- Complete stubs
- Full validation

**Total**: ~10 hours in 5 focused sessions

---

## 🔧 TECHNICAL REFERENCE

### Correct MCP Tool Signatures

#### HeyGen Tools:

```markdown
mcp**heygen**get_avatar_groups() → {avatar_groups: [...]}
mcp**heygen**get_avatars_in_avatar_group(group_id) → {avatars: [...]}
mcp**heygen**get_voices() → {voices: [...]} # WARNING: 53k tokens
mcp**heygen**generate_avatar_video(avatar_id, voice_id, input_text, title) → {video_id}
mcp**heygen**get_avatar_video_status(video_id) → {status, video_url, ...}
mcp**heygen**get_remaining_credits() → {credits: ...}
```

#### Veo 3 Tools:

```markdown
mcp**veo3**generate_video(prompt, model='veo-3.0-generate-preview') → {video_path, ...}

# BLOCKING CALL - Returns video path directly, no polling needed

mcp**veo3**generate_video_from_image(prompt, image_path, model) → {video_path, ...}

# BLOCKING CALL - Animates static image

mcp**veo3**list_generated_videos(output_dir=None) → {videos: [...]}
mcp**veo3**get_video_info(video_path) → {metadata: ...}
```

**Important**:

- `generate_video` is **BLOCKING** - no separate status polling
- Aspect ratio: TBD (test `aspect_ratio` param or prompt text)
- Models: `veo-3.0-generate-preview` (quality) or `veo-3.0-fast-generate-preview` (speed)

#### Sora 2 Tools:

```markdown
mcp**sora2**create_video(prompt, model='sora-2', size='1280x720', seconds='8') → {video_id}

# Returns video_id, must poll for completion

mcp**sora2**get_video_status(video_id) → {status, video_url, progress, ...}

# Poll until status == 'completed'

mcp**sora2**list_videos(limit=20, after=None) → {videos: [...]}
mcp**sora2**delete_video(video_id) → {success}

mcp**sora2**merge_videos(video_urls, output_path='merged_video.mp4') → {output_path}

# Stitches multiple videos with fade transitions

mcp**sora2**create_fade_animation(image_path, duration=3, fade_type='in', output_path='fade.mp4') → {output_path}

# Creates fade-in/out/in-out animation from image
```

**Important**:

- `create_video` returns `video_id`, then poll with `get_video_status`
- Sizes: Vertical (`720x1280`, `1024x1792`) or Horizontal (`1280x720`, `1792x1024`)
- Duration: `4`, `8`, or `12` seconds
- C2PA watermark included (cannot be removed)

---

## 📈 SUCCESS METRICS

### Before Implementation:

- **Workflows Functional**: 10% (only talking head works)
- **MCP Integration**: 40% (broken tool names)
- **Enhanced Prompting**: 0% (not integrated)
- **Feature Complete**: 35%

### After Phase 1:

- **Workflows Functional**: 50% (talking head + scene generation)
- **MCP Integration**: 70% (tool names fixed)
- **Enhanced Prompting**: 0%
- **Feature Complete**: 45%

### After Phase 3:

- **Workflows Functional**: 70%
- **MCP Integration**: 90%
- **Enhanced Prompting**: 80%
- **Feature Complete**: 65%

### After Phase 6:

- **Workflows Functional**: 100% ✅
- **MCP Integration**: 95% ✅
- **Enhanced Prompting**: 95% ✅
- **Feature Complete**: 95% ✅

---

## 🎬 NEXT STEPS

**IMMEDIATE**: Execute Phase 1 (Critical Fixes)

1. Fix scene-generation-instructions.md tool names
2. Investigate Veo3 aspect ratio method
3. Test talking head workflow
4. Validate both work end-to-end

**Estimated Time**: 90 minutes to working baseline

---

**Ready to start Phase 1?** 🚀
