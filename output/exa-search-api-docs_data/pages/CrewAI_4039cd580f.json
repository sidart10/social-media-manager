{
  "title": "CrewAI",
  "content": "Source: https://docs.exa.ai/reference/crewai\n\nLearn how to add Exa retrieval capabilities to your CrewAI agents.\n\n[CrewAI](https://crewai.com/) is a framework for orchestrating AI agents that work together to accomplish complex tasks.\nIn this guide, we'll create a crew of two agents that generate a newsletter based on Exa's search results. We'll go over how to:\n\n1. Create a custom Exa-powered CrewAI tool\n2. Set up agents and assign them specific roles that use the Exa-powered search tool\n3. Organize the agents into a crew that will write a newsletter\n\n<Steps>\n  <Step title=\"Pre-requisites and installation\">\n    Install the crewAI core, crewAI tools and Exa Python SDK libraries.\n\n<Step title=\"Defining a custom Exa-based tool in crewAI\">\n    We set up a [custom tool](https://docs.crewai.com/concepts/tools) using the crewAI [@tool decorator ](https://docs.crewai.com/concepts/tools#utilizing-the-tool-decorator). Within the tool, we can initialize the Exa class from the [Exa Python SDK](https://github.com/exa-labs/exa-py), make a request, and return a parsed out result.\n\n<Note> Make sure your API keys are initialized properly. For this demonstration, the environment variable names are `OPENAI_API_KEY` and `EXA_API_KEY` for OpenAI and Exa keys respectively. </Note>\n\n<Card title=\"Get your Exa API key\" icon=\"key\" horizontal href=\"https://dashboard.exa.ai/api-keys\" />\n  </Step>\n\n<Step title=\"Setting up CrewAI agent\">\n    Import the relevant crewAI modules. Then, define `exa_tools` to reference the custom search method we defined above.\n\nWe then set up[ two agents](https://docs.crewai.com/concepts/Agents/) and place them in a [crew together](https://docs.crewai.com/concepts/Crews/):\n\n* One to research with Exa (providing the custom tool defined above)\n    * Another to write a newsletter as an output (using an LLM)\n\n<Step title=\"Defining tasks for the agents\">\n    Next, we'll define [tasks](https://docs.crewai.com/concepts/Tasks/) for each agent and create the crew overall using all of the components we've set up above.\n\n<Step title=\"Kicking off the crew\">\n    Finally, we kick off the crew by providing a research topic as our input query.\n\n<Step title=\"Output\">\n    As you can see, Exa's search results enriched the output generation!",
  "code_samples": [
    {
      "code": "</Step>\n\n  <Step title=\"Defining a custom Exa-based tool in crewAI\">\n    We set up a [custom tool](https://docs.crewai.com/concepts/tools) using the crewAI [@tool decorator ](https://docs.crewai.com/concepts/tools#utilizing-the-tool-decorator). Within the tool, we can initialize the Exa class from the [Exa Python SDK](https://github.com/exa-labs/exa-py), make a request, and return a parsed out result.",
      "language": "unknown"
    },
    {
      "code": "<Note> Make sure your API keys are initialized properly. For this demonstration, the environment variable names are `OPENAI_API_KEY` and `EXA_API_KEY` for OpenAI and Exa keys respectively. </Note>\n\n    <Card title=\"Get your Exa API key\" icon=\"key\" horizontal href=\"https://dashboard.exa.ai/api-keys\" />\n  </Step>\n\n  <Step title=\"Setting up CrewAI agent\">\n    Import the relevant crewAI modules. Then, define `exa_tools` to reference the custom search method we defined above.",
      "language": "unknown"
    },
    {
      "code": "We then set up[ two agents](https://docs.crewai.com/concepts/Agents/) and place them in a [crew together](https://docs.crewai.com/concepts/Crews/):\n\n    * One to research with Exa (providing the custom tool defined above)\n    * Another to write a newsletter as an output (using an LLM)",
      "language": "unknown"
    },
    {
      "code": "</Step>\n\n  <Step title=\"Defining tasks for the agents\">\n    Next, we'll define [tasks](https://docs.crewai.com/concepts/Tasks/) for each agent and create the crew overall using all of the components we've set up above.",
      "language": "unknown"
    },
    {
      "code": "</Step>\n\n  <Step title=\"Kicking off the crew\">\n    Finally, we kick off the crew by providing a research topic as our input query.",
      "language": "unknown"
    },
    {
      "code": "</Step>\n\n  <Step title=\"Output\">\n    As you can see, Exa's search results enriched the output generation!",
      "language": "unknown"
    }
  ],
  "headings": [
    {
      "level": "h2",
      "text": "Get Started",
      "id": "get-started"
    }
  ],
  "url": "llms-txt#crewai",
  "links": []
}