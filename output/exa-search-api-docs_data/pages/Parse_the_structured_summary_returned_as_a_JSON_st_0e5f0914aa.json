{
  "title": "Parse the structured summary (returned as a JSON string)",
  "content": "first_result = result_with_structured_summary.results[0]\nif first_result.summary:\n    import json\n    structured_data = json.loads(first_result.summary)\n    print(structured_data[\"name\"])        # e.g. \"OpenAI\"\n    print(structured_data[\"industry\"])    # e.g. \"Artificial Intelligence\"\n    print(structured_data[\"keyProducts\"]) # e.g. [\"GPT-4\", \"DALL-E\", \"ChatGPT\"]\nJSON JSON theme={null}\n`{\n  \"results\": [\n    {\n\n\"title\": \"2023 AI Trends in Health Care\",\n      \"id\": \"https://aibusiness.com/verticals/2023-ai-trends-in-health-care-\",\n      \"url\": \"https://aibusiness.com/verticals/2023-ai-trends-in-health-care-\",\n      \"publishedDate\": \"2022-12-29\",\n      \"author\": \"Wylie Wong\",\n      \"text\": \"While the health care industry was initially slow to [... TRUNCATED IN THESE DOCS FOR BREVITY ...]\",\n      \"highlights\": [\n        \"But to do so, many health care institutions would like to share data, so they can build a more comprehensive dataset to use to train an AI model. Traditionally, they would have to move the data to one central repository. However, with federated or swarm learning, the data does not have to move. Instead, the AI model goes to each individual health care facility and trains on the data, he said. This way, health care providers can maintain security and governance over their data.\"\n      ],\n      \"highlightScores\": [\n        0.5566554069519043\n      ]\n    },\n    {\n\n\"title\": \"AI in healthcare: Innovative use cases and applications\",\n      \"id\": \"https://www.leewayhertz.com/ai-use-cases-in-healthcare\",\n      \"url\": \"https://www.leewayhertz.com/ai-use-cases-in-healthcare\",\n      \"publishedDate\": \"2023-02-13\",\n      \"author\": \"Akash Takyar\",\n      \"text\": \"The integration of AI in healthcare is not [... TRUNCATED IN THESE DOCS FOR BREVITY ...]\",\n      \"highlights\": [\n        \"The ability of AI to analyze large amounts of medical data and identify patterns has led to more accurate and timely diagnoses. This has been especially helpful in identifying complex medical conditions, which may be difficult to detect using traditional methods. Here are some examples of successful implementation of AI in healthcare. IBM Watson Health: IBM Watson Health is an AI-powered system used in healthcare to improve patient care and outcomes. The system uses natural language processing and machine learning to analyze large amounts of data and provide personalized treatment plans for patients.\"\n      ],\n      \"highlightScores\": [\n        0.6563674807548523\n      ]\n    }\n  ],\n  \"requestId\": \"d8fd59c78d34afc9da173f1fe5aa8965\"\n}\nPython Python theme={null}\nsimilar_results = exa.find_similar(\n    \"miniclip.com\",\n    num_results=2,\n    exclude_source_domain=True\n)\nJSON JSON theme={null}\n{\n  \"results\": [\n    {\n\n\"title\": \"Play New Free Online Games Every Day\",\n      \"id\": \"https://www.minigames.com/new-games\",\n      \"url\": \"https://www.minigames.com/new-games\",\n      \"publishedDate\": \"2000-01-01\",\n      \"author\": null\n    },\n    {\n\n\"title\": \"Play The best Online Games\",\n      \"id\": \"https://www.minigames.com/\",\n      \"url\": \"https://www.minigames.com/\",\n      \"publishedDate\": \"2000-01-01\",\n      \"author\": null\n    }\n  ],\n  \"requestId\": \"08fdc6f20e9f3ea87f860af3f6ccc30f\"\n}\nPython Python theme={null}",
  "code_samples": [
    {
      "code": "### Input Parameters:\n\n| Parameter              | Type                                              | Description                                                                                                                                                                                                                                                  | Default  |\n| ---------------------- | ------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | -------- |\n| query                  | str                                               | The input query string.                                                                                                                                                                                                                                      | Required |\n| text                   | Union\\[TextContentsOptions, Literal\\[True]]       | If provided, includes the full text of the content in the results.                                                                                                                                                                                           | None     |\n| highlights             | Union\\[HighlightsContentsOptions, Literal\\[True]] | If provided, includes highlights of the content in the results.                                                                                                                                                                                              | None     |\n| num\\_results           | Optional\\[int]                                    | Number of search results to return. Limits vary by search type: with \"keyword\": max 10, with \"neural\": max 100. If you want to increase the num results, contact sales ([hello@exa.ai](mailto:hello@exa.ai))                                                 | 10       |\n| include\\_domains       | Optional\\[List\\[str]]                             | List of domains to include in the search.                                                                                                                                                                                                                    | None     |\n| exclude\\_domains       | Optional\\[List\\[str]]                             | List of domains to exclude in the search.                                                                                                                                                                                                                    | None     |\n| start\\_crawl\\_date     | Optional\\[str]                                    | Results will only include links **crawled** after this date.                                                                                                                                                                                                 | None     |\n| end\\_crawl\\_date       | Optional\\[str]                                    | Results will only include links **crawled** before this date.                                                                                                                                                                                                | None     |\n| start\\_published\\_date | Optional\\[str]                                    | Results will only include links with a **published** date after this date.                                                                                                                                                                                   | None     |\n| end\\_published\\_date   | Optional\\[str]                                    | Results will only include links with a **published** date before this date.                                                                                                                                                                                  | None     |\n| type                   | Optional\\[str]                                    | [The type of search](#), keyword or neural.                                                                                                                                                                                                                  | \"auto\"   |\n| category               | Optional\\[str]                                    | A data category to focus on when searching, with higher comprehensivity and data cleanliness. Currently, the available categories are: company, research paper, news, linkedin profile, github, tweet, movie, song, personal site, pdf and financial report. | None     |\n| include\\_text          | Optional\\[List\\[str]]                             | List of strings that must be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words.                                                                                                                                    | None     |\n| exclude\\_text          | Optional\\[List\\[str]]                             | List of strings that must not be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words. Checks from the first 1000 words of the webpage text.                                                                          | None     |\n| context                | Union\\[ContextContentsOptions, Literal\\[True]]    | Return page contents as a context string for LLM RAG. When true, combines all result contents into one string. We recommend 10000+ characters for best results. Context strings often perform better than highlights for RAG applications.                   | None     |\n\n### Returns Example:",
      "language": "unknown"
    },
    {
      "code": "### Return Parameters:\n\nThe return type depends on the combination of `text` and `highlights` parameters:\n\n* `SearchResponse[ResultWithText]`: When only `text` is provided.\n* `SearchResponse[ResultWithHighlights]`: When only `highlights` is provided.\n* `SearchResponse[ResultWithTextAndHighlights]`: When both `text` and `highlights` are provided.\n\n### `SearchResponse[ResultWithTextAndHighlights]`\n\n| Field   | Type                               | Description                                 |\n| ------- | ---------------------------------- | ------------------------------------------- |\n| results | List\\[ResultWithTextAndHighlights] | List of ResultWithTextAndHighlights objects |\n| context | Optional\\[str]                     | Results concatenated into a string          |\n\n### `ResultWithTextAndHighlights` Object\n\n| Field | Type           | Description                   |\n| ----- | -------------- | ----------------------------- |\n| url   | str            | URL of the search result      |\n| id    | str            | Temporary ID for the document |\n| title | Optional\\[str] | Title of the search result    |\n\n\\| published\\_date   | Optional\\[str]   | Estimated creation date                          |\n\\| author           | Optional\\[str]   | Author of the content, if available              |\n\\| text             | str             | Text of the search result page (always present)  |\n\\| highlights       | List\\[str]       | Highlights of the search result (always present) |\n\\| highlight\\_scores | List\\[float]     | Scores of the highlights (always present)        |\n\nNote: If neither `text` nor `highlights` is specified, the method defaults to including the full text content.\n\n## `find_similar` Method\n\nFind a list of similar results based on a webpage's URL.\n\n### Input Example:",
      "language": "unknown"
    },
    {
      "code": "### Input Parameters:\n\n| Parameter               | Type                                           | Description                                                                                                                                                                                                                                | Default  |\n| ----------------------- | ---------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | -------- |\n| url                     | str                                            | The URL of the webpage to find similar results for.                                                                                                                                                                                        | Required |\n| num\\_results            | Optional\\[int]                                 | Number of similar results to return.                                                                                                                                                                                                       | None     |\n| include\\_domains        | Optional\\[List\\[str]]                          | List of domains to include in the search.                                                                                                                                                                                                  | None     |\n| exclude\\_domains        | Optional\\[List\\[str]]                          | List of domains to exclude from the search.                                                                                                                                                                                                | None     |\n| start\\_crawl\\_date      | Optional\\[str]                                 | Results will only include links **crawled** after this date.                                                                                                                                                                               | None     |\n| end\\_crawl\\_date        | Optional\\[str]                                 | Results will only include links **crawled** before this date.                                                                                                                                                                              | None     |\n| start\\_published\\_date  | Optional\\[str]                                 | Results will only include links with a **published** date after this date.                                                                                                                                                                 | None     |\n| end\\_published\\_date    | Optional\\[str]                                 | Results will only include links with a **published** date before this date.                                                                                                                                                                | None     |\n| exclude\\_source\\_domain | Optional\\[bool]                                | If true, excludes results from the same domain as the input URL.                                                                                                                                                                           | None     |\n| category                | Optional\\[str]                                 | A data category to focus on when searching, with higher comprehensivity and data cleanliness.                                                                                                                                              | None     |\n| context                 | Union\\[ContextContentsOptions, Literal\\[True]] | Return page contents as a context string for LLM RAG. When true, combines all result contents into one string. We recommend 10000+ characters for best results. Context strings often perform better than highlights for RAG applications. | None     |\n\n### Returns Example:",
      "language": "unknown"
    },
    {
      "code": "### Return Parameters:\n\n`SearchResponse[_Result]`: The response containing similar results and optional autoprompt string.\n\n### `SearchResponse[Results]`\n\n| Field   | Type                               | Description                                 |\n| ------- | ---------------------------------- | ------------------------------------------- |\n| results | List\\[ResultWithTextAndHighlights] | List of ResultWithTextAndHighlights objects |\n| context | Optional\\[String]                  | Results concatentated into a string         |\n\n### `Results` Object\n\n| Field | Type           | Description                   |\n| ----- | -------------- | ----------------------------- |\n| url   | str            | URL of the search result      |\n| id    | str            | Temporary ID for the document |\n| title | Optional\\[str] | Title of the search result    |\n\n\\| published\\_date | Optional\\[str]   | Estimated creation date                       |\n\\| author         | Optional\\[str]   | Author of the content, if available           |\n\n## `find_similar_and_contents` Method\n\nFind a list of similar results based on a webpage's URL, optionally including the text content or highlights of each result.\n\n### Input Example:",
      "language": "unknown"
    }
  ],
  "headings": [
    {
      "level": "h3",
      "text": "Input Parameters:",
      "id": "input-parameters:"
    },
    {
      "level": "h3",
      "text": "Returns Example:",
      "id": "returns-example:"
    },
    {
      "level": "h3",
      "text": "Return Parameters:",
      "id": "return-parameters:"
    },
    {
      "level": "h3",
      "text": "`SearchResponse[ResultWithTextAndHighlights]`",
      "id": "`searchresponse[resultwithtextandhighlights]`"
    },
    {
      "level": "h3",
      "text": "`ResultWithTextAndHighlights` Object",
      "id": "`resultwithtextandhighlights`-object"
    },
    {
      "level": "h2",
      "text": "`find_similar` Method",
      "id": "`find_similar`-method"
    },
    {
      "level": "h3",
      "text": "Input Example:",
      "id": "input-example:"
    },
    {
      "level": "h3",
      "text": "Input Parameters:",
      "id": "input-parameters:"
    },
    {
      "level": "h3",
      "text": "Returns Example:",
      "id": "returns-example:"
    },
    {
      "level": "h3",
      "text": "Return Parameters:",
      "id": "return-parameters:"
    },
    {
      "level": "h3",
      "text": "`SearchResponse[Results]`",
      "id": "`searchresponse[results]`"
    },
    {
      "level": "h3",
      "text": "`Results` Object",
      "id": "`results`-object"
    },
    {
      "level": "h2",
      "text": "`find_similar_and_contents` Method",
      "id": "`find_similar_and_contents`-method"
    },
    {
      "level": "h3",
      "text": "Input Example:",
      "id": "input-example:"
    }
  ],
  "url": "llms-txt#parse-the-structured-summary-(returned-as-a-json-string)",
  "links": []
}